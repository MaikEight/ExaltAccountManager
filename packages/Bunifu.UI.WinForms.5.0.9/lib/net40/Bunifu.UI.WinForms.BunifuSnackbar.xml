<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bunifu.UI.WinForms.BunifuSnackbar</name>
    </assembly>
    <members>
        <member name="T:Utilities.BunifuSnackbar.Shadower">
            <summary>
            This class is primarily used to apply
            a neat and decent drop-shadow effect
            to any Windows Form using the method
            <see cref="M:Utilities.BunifuSnackbar.Shadower.ApplyShadows(System.Windows.Forms.Form)"/>.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.Win32API.Win32">
            <summary>
            Summary description for Win32.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.Extensions.ColorExtensions">
            <summary>
            Provides a collection of methods that extend the .NET Color class.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.Transitions.IManagedType">
            <summary>
            Interface for all types we can perform transitions on. 
            Each type (e.g. int, double, Color) that we can perform a transition on 
            needs to have its own class that implements this interface. These classes 
            tell the transition system how to act on objects of that type.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.IManagedType.getManagedType">
            <summary>
            Returns the Type that the instance is managing.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.IManagedType.copy(System.Object)">
            <summary>
            Returns a deep copy of the object passed in. (In particular this is 
            needed for types that are objects.)
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.IManagedType.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an object holding the value between the start and end corresponding
            to the percentage passed in. (Note: the percentage can be less than 0% or
            greater than 100%.)
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.ITransitionType.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called by the Transition framework when its timer ticks to pass in the
            time (in ms) since the transition started. 
            
            You should return (in an out parameter) the percentage movement towards 
            the destination value for the time passed in. Note: this does not need to
            be a smooth transition from 0% to 100%. You can overshoot with values
            greater than 100% or undershoot if you need to (for example, to have some
            form of "elasticity").
            
            The percentage should be returned as (for example) 0.1 for 10%.
            
            You should return (in an out parameter) whether the transition has completed.
            (This may not be at the same time as the percentage has moved to 100%.)
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.Transitions.ManagedType_Color">
            <summary>
            Class that manages transitions for Color properties. For these we
            need to transition the R, G, B and A sub-properties independently.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.ManagedType_Color.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.ManagedType_Color.copy(System.Object)">
            <summary>
            Returns a copy of the color object passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.ManagedType_Color.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Creates an intermediate value for the colors depending on the percentage passed in.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.Transitions.ManagedType_Double">
            <summary>
            Manages transitions for double properties.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.ManagedType_Double.getManagedType">
            <summary>
             Returns the type managed by this class.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.ManagedType_Double.copy(System.Object)">
            <summary>
            Returns a copy of the double passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.ManagedType_Double.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between start and end for the percentage passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.ManagedType_Float.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.ManagedType_Float.copy(System.Object)">
            <summary>
            Returns a copy of the float passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.ManagedType_Float.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the interpolated value for the percentage passed in.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.Transitions.ManagedType_Int">
            <summary>
            Manages transitions for int properties.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.ManagedType_Int.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.ManagedType_Int.copy(System.Object)">
            <summary>
            Returns a copy of the int passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.ManagedType_Int.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between the start and end for the percentage passed in.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.Transitions.ManagedType_String">
            <summary>
            Manages transitions for strings. This doesn't make as much sense as transitions
            on other types, but I like the way it looks!
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.ManagedType_String.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.ManagedType_String.copy(System.Object)">
            <summary>
            Returns a copy of the string passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.ManagedType_String.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an "interpolated" string.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.Transitions.Transition">
            <summary>
            Lets you perform animated transitions of properties on arbitrary objects. These 
            will often be transitions of UI properties, for example an animated fade-in of 
            a UI object, or an animated move of a UI object from one position to another.
            
            Each transition can simulataneously change multiple properties, including properties
            across multiple objects.
            
            Example transition
            ------------------
            a.      Transition t = new Transition(new TransitionMethod_Linear(500));
            b.      t.add(form1, "Width", 500);
            c.      t.add(form1, "BackColor", Color.Red);
            d.      t.run();
              
            Line a:         Creates a new transition. You specify the transition method.
                            
            Lines b. and c: Set the destination values of the properties you are animating.
            
            Line d:         Starts the transition.
            
            Transition methods
            ------------------
            TransitionMethod objects specify how the transition is made. Examples include
            linear transition, ease-in-ease-out and so on. Different transition methods may
            need different parameters.
            
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.Transition.#cctor">
            <summary>
            You should register all managed-types here.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.Transitions.Transition.Args">
            <summary>
            Args passed with the TransitionCompletedEvent.
            </summary>
        </member>
        <member name="E:Utilities.BunifuSnackbar.Transitions.Transition.TransitionCompletedEvent">
            <summary>
            Event raised when the transition hass completed.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.Transition.run(System.Object,System.String,System.Object,Utilities.BunifuSnackbar.Transitions.ITransitionType)">
            <summary>
            Creates and immediately runs a transition on the property passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.Transition.run(System.Object,System.String,System.Object,System.Object,Utilities.BunifuSnackbar.Transitions.ITransitionType)">
            <summary>
            Sets the property passed in to the initial value passed in, then creates and 
            immediately runs a transition on it.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.Transition.runChain(Utilities.BunifuSnackbar.Transitions.Transition[])">
            <summary>
            Creates a TransitionChain and runs it.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.Transition.#ctor(Utilities.BunifuSnackbar.Transitions.ITransitionType)">
            <summary>
            Constructor. You pass in the object that holds the properties 
            that you are performing transitions on.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.Transition.add(System.Object,System.String,System.Object)">
            <summary>
            Adds a property that should be animated as part of this transition.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.Transition.run">
            <summary>
            Starts the transition.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.Transitions.Transition.TransitionedProperties">
            <summary>
            Property that returns a list of information about each property managed
            by this transition.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.Transition.removeProperty(Utilities.BunifuSnackbar.Transitions.Transition.TransitionedPropertyInfo)">
            <summary>
            We remove the property with the info passed in from the transition.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.Transition.onTimer">
            <summary>
            Called when the transition timer ticks.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.Transition.setProperty(System.Object,Utilities.BunifuSnackbar.Transitions.Transition.PropertyUpdateArgs)">
            <summary>
            Sets a property on the object passed in to the value passed in. This method
            invokes itself on the GUI thread if the property is being invoked on a GUI 
            object.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.Transition.isDisposed(System.Object)">
            <summary>
            Returns true if the object passed in is a Control and is disposed
            or in the process of disposing. (If this is the case, we don't want
            to make any changes to its properties.)
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.Transition.registerType(Utilities.BunifuSnackbar.Transitions.IManagedType)">
            <summary>
            Registers a transition-type. We hold them in a map.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionChain.runNextTransition">
            <summary>
            Runs the next transition in the list.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionChain.onTransitionCompleted(System.Object,Utilities.BunifuSnackbar.Transitions.Transition.Args)">
            <summary>
            Called when the transition we have just run has completed.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionElement.#ctor(System.Double,System.Double,Utilities.BunifuSnackbar.Transitions.InterpolationMethod)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.Transitions.TransitionElement.EndTime">
            <summary>
            The percentage of elapsed time, expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.Transitions.TransitionElement.EndValue">
            <summary>
            The value of the animated properties at the EndTime. This is the percentage 
            movement of the properties between their start and end values. This should
            be expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.Transitions.TransitionElement.InterpolationMethod">
            <summary>
            The interpolation method to use when moving between the previous value
            and the current one.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.Transitions.TransitionManager">
            <summary>
            This class is responsible for running transitions. It holds the timer that
            triggers transaction animation. 
            </summary><remarks>
            This class is a singleton.
            
            We manage the transaction timer here so that we can have a single timer
            across all transactions. If each transaction has its own timer, this creates
            one thread for each transaction, and this can lead to too many threads in
            an application.
            
            This class essentially just manages the timer for the transitions. It calls 
            back into the running transitions, which do the actual work of the transition.
            
            </remarks>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionManager.getInstance">
            <summary>
            Singleton's getInstance method.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionManager.register(Utilities.BunifuSnackbar.Transitions.Transition)">
            <summary>
            You register a transition with the manager here. This will start to run
            the transition as the manager's timer ticks.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionManager.removeDuplicates(Utilities.BunifuSnackbar.Transitions.Transition)">
            <summary>
            Checks if any existing transitions are acting on the same properties as the
            transition passed in. If so, we remove the duplicated properties from the 
            older transitions.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionManager.removeDuplicates(Utilities.BunifuSnackbar.Transitions.Transition,Utilities.BunifuSnackbar.Transitions.Transition)">
            <summary>
            Finds any properties in the old-transition that are also in the new one,
            and removes them from the old one.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionManager.#ctor">
            <summary>
            Private constructor (for singleton).
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionManager.onTimerElapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Called when the timer ticks.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionManager.onTransitionCompleted(System.Object,Utilities.BunifuSnackbar.Transitions.Transition.Args)">
            <summary>
            Called when a transition has completed. 
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.Transitions.TransitionType_Acceleration">
            <summary>
            Manages transitions under constant acceleration from a standing start.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionType_Acceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionType_Acceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 0, and the acceleration to get to 1.0
            at t=1.0 is 2, so the formula just becomes:
              s = t^2
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.Transitions.TransitionType_Bounce">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is accelerated to the destination and then decelerated back
            as if being dropped with gravity and bouncing back against gravity.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionType_Bounce.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.Transitions.TransitionType_CriticalDamping">
            <summary>
            This transition animates with an exponential decay. This has a damping effect
            similar to the motion of a needle on an electomagnetically controlled dial.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionType_CriticalDamping.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionType_CriticalDamping.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.Transitions.TransitionType_Deceleration">
            <summary>
            Manages a transition starting from a high speed and decelerating to zero by
            the end of the transition.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionType_Deceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionType_Deceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 2, and the acceleration to get to 1.0
            at t=1.0 is -2, so the formula becomes:
              s = t(2-t)
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.Transitions.TransitionType_EaseInEaseOut">
            <summary>
            Manages an ease-in-ease-out transition. This accelerates during the first 
            half of the transition, and then decelerates during the second half.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionType_EaseInEaseOut.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionType_EaseInEaseOut.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            We accelerate as at the rate needed (a=4) to get to 0.5 at t=0.5, and
            then decelerate at the same rate to end up at 1.0 at t=1.0.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.Transitions.TransitionType_Flash">
            <summary>
            This transition type 'flashes' the properties a specified number of times, ending
            up by reverting them to their initial values. You specify the number of bounces and
            the length of each bounce. 
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionType_Flash.#ctor(System.Int32,System.Int32)">
            <summary>
            You specify the number of bounces and the time taken for each bounce.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.Transitions.TransitionType_Linear">
            <summary>
            This class manages a linear transition. The percentage complete for the transition
            increases linearly with time.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionType_Linear.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time (in milliseconds) that the
            transition will take.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionType_Linear.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            We return the percentage completed.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.Transitions.TransitionType_ThrowAndCatch">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is decelerated to the destination and then acclerated back
            as if being thrown against gravity and then descending back with gravity.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionType_ThrowAndCatch.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.Transitions.TransitionType_UserDefined">
            <summary>
            This class allows you to create user-defined transition types. You specify these
            as a list of TransitionElements. Each of these defines: 
            End time , End value, Interpolation method
            
            For example, say you want to make a bouncing effect with a decay:
            
            EndTime%    EndValue%   Interpolation
            --------    ---------   -------------
            50          100         Acceleration 
            75          50          Deceleration
            85          100         Acceleration
            91          75          Deceleration
            95          100         Acceleration
            98          90          Deceleration
            100         100         Acceleration
            
            The time values are expressed as a percentage of the overall transition time. This 
            means that you can create a user-defined transition-type and then use it for transitions
            of different lengths.
            
            The values are percentages of the values between the start and end values of the properties
            being animated in the transitions. 0% is the start value and 100% is the end value.
            
            The interpolation is one of the values from the InterpolationMethod enum.
            
            So the example above accelerates to the destination (as if under gravity) by
            t=50%, then bounces back up to half the initial height by t=75%, slowing down 
            (as if against gravity) before falling down again and bouncing to decreasing 
            heights each time.
            
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionType_UserDefined.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionType_UserDefined.#ctor(System.Collections.Generic.IList{Utilities.BunifuSnackbar.Transitions.TransitionElement},System.Int32)">
            <summary>
            Constructor. You pass in the list of TransitionElements and the total time
            (in milliseconds) for the transition.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionType_UserDefined.setup(System.Collections.Generic.IList{Utilities.BunifuSnackbar.Transitions.TransitionElement},System.Int32)">
            <summary>
            Sets up the transitions. 
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionType_UserDefined.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called to find the value for the movement of properties for the time passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.TransitionType_UserDefined.getElementInfo(System.Double,System.Double@,System.Double@,System.Double@,System.Double@,Utilities.BunifuSnackbar.Transitions.InterpolationMethod@)">
            <summary>
            Returns the element info for the time-fraction passed in. 
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.Transitions.Utility">
            <summary>
            A class holding static utility functions.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.Utility.getValue(System.Object,System.String)">
            <summary>
            Returns the value of the property passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.Utility.setValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the property passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.Utility.interpolate(System.Double,System.Double,System.Double)">
            <summary>
            Returns a value between d1 and d2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.Utility.interpolate(System.Int32,System.Int32,System.Double)">
            <summary>
            Returns a value betweeen i1 and i2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.Utility.interpolate(System.Single,System.Single,System.Double)">
            <summary>
            Returns a value betweeen f1 and f2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.Utility.convertLinearToEaseInEaseOut(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under an ease-in-ease-out transition.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.Utility.convertLinearToAcceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant acceleration transition.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.Utility.convertLinearToDeceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant deceleration transition.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Transitions.Utility.raiseEvent``1(System.EventHandler{``0},System.Object,``0)">
            <summary>
            Fires the event passed in in a thread-safe way. 
            </summary><remarks>
            This method loops through the targets of the event and invokes each in turn. If the
            target supports ISychronizeInvoke (such as forms or controls) and is set to run 
            on a different thread, then we call BeginInvoke to marshal the event to the target
            thread. If the target does not support this interface (such as most non-form classes)
            or we are on the same thread as the target, then the event is fired on the same
            thread as this is called from.
            </remarks>
        </member>
        <member name="T:Utilities.BunifuSnackbar.BunifuImageButtonExtended">
            <summary>
            Provides button-like capabilities and image manipulation features when working with images.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.BunifuImageButtonExtended.FlipOrientation">
            <summary>
            Provides flip-orientation options for images.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuImageButtonExtended.FlipOrientation.Normal">
            <summary>
            Flip image to normal view.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuImageButtonExtended.FlipOrientation.Horizontal">
            <summary>
            Flip image horizontally.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuImageButtonExtended.FlipOrientation.Vertical">
            <summary>
            Flip image vertically.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.BunifuImageButtonExtended.ImageStates">
            <summary>
            Provides the various supported image-states
            generated from the applied Image.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuImageButtonExtended.ImageStates.Normal">
            <summary>
            Returns the normal image.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuImageButtonExtended.ImageStates.TotallyFaded">
            <summary>
            Returns a totally blurred image.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuImageButtonExtended.ImageStates.MediallyFaded">
            <summary>
            Returns a medially blurred image.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuImageButtonExtended.ImageStates.PartiallyFaded">
            <summary>
            Returns a partially blurred image.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuImageButtonExtended.ImageMargin">
            <summary>
            Gets or sets the distance between the container and the underlying image.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuImageButtonExtended.Zoom">
            <summary>
            Gets or sets the distance between the container and the underlying image.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuImageButtonExtended.Rotation">
            <summary>
            Gets or sets the angle of rotation for the image.
            Please provide a value between 0 and 360.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuImageButtonExtended.ZoomSpeed">
            <summary>
            Gets or sets the time in milliseconds the zooming animation takes when active.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuImageButtonExtended.Flip">
            <summary>
            Flips the image to any given orientation.
            Supports both Vertical and Horizontal orientation-flipping options.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuImageButtonExtended.Image">
            <summary>
            Gets or sets the image displayed in the image button.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuImageButtonExtended.ImageActive">
            <summary>
            (This property has been deprecated as of version 1.6.0.0. Please use the property 'ActiveImage' instead.)
            Gets or sets the image to be applied whenever the image button is active or hovered onto.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuImageButtonExtended.ActiveImage">
            <summary>
            Gets or sets the image to be applied whenever the image button is active or hovered onto.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuImageButtonExtended.ImageSize">
            <summary>
            Gets or sets the default image size.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuImageButtonExtended.ImageZoomSize">
            <summary>
            Gets or sets the maximum size of the image when hovered onto or active.
            This defaults to the standard set size of the control.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuImageButtonExtended.ToolTipText">
            <summary>
            Allows you to easily get or set some ToolTip information to 
            be displayed to the user on mouse-hovering over the control.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuImageButtonExtended.ShowCursorChanges">
            <summary>
             Gets or sets a value indicating whether the control 
             will show cursor changes during mouse-hover events.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuImageButtonExtended.ShowActiveImage">
            <summary>
            Sets a value indicating whether the 'ActiveImage' 
            will be applied on mouse-hover.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuImageButtonExtended.AllowZooming">
            <summary>
            Gets or sets a value indicating whether zooming is enabled.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuImageButtonExtended.AllowAnimations">
            <summary>
            Gets or sets a value indicating whether animations are enabled.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuImageButtonExtended.FadeWhenInactive">
            <summary>
            Automatically fades the image when inactive.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuImageButtonExtended.IsZoomedIn">
            <summary>
            Gets a value indicating whether the image button is currently zoomed-in.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuImageButtonExtended.ShowSizeMarkers">
            <summary>
             Gets or sets a value indicating whether the size markers 
             displayed at the control's top-area will be visible during design-time.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuImageButtonExtended.ShowImageBorders">
            <summary>
             Gets or sets a value indicating whether borders will 
             be viewed for the image applied during design-time.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuImageButtonExtended.CreateParams">
            <summary>
            Overrides the CreateParams method to stop flickering issues 
            by setting the "WS_EX_COMPOSITED" (0x02000000) style.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuImageButtonExtended.ImageLocation">
            <summary>
            Gets or sets the path or URL for the image to display in the Image Button.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuImageButtonExtended.WaitOnLoad">
            <summary>
            Gets or sets a value indicating whether an image is loaded synchronously.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuImageButtonExtended.InitialImage">
            <summary>
            Gets or sets the image displayed in the Image
            Button when the main image is loading.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuImageButtonExtended.ErrorImage">
            <summary>
            Gets or sets the image displayed in the Image
            Button when an error occurs during the image-loading
            process or if the image load is canceled.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuImageButtonExtended.Calculate">
            <summary>
            Calculates the correct image-size as per the applied state.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuImageButtonExtended.Render(Utilities.BunifuSnackbar.BunifuImageButtonExtended.ImageStates)">
            <summary>
            Renders the required image as per the applied state.
            </summary>
            <param name="state">The image-state-type to be used.</param>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuImageButtonExtended.Render(System.Int32)">
            <summary>
            Renders the required image as per the applied state.
            </summary>
            <param name="state">The image-state to be used.</param>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuImageButtonExtended.ZoomIn">
            <summary>
            Zooms in the image to the preset size.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuImageButtonExtended.ZoomOut">
            <summary>
            Zooms out the image to its default size.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuImageButtonExtended.Rotate(System.Int32,System.Boolean,System.Int32)">
            <summary>
            Rotates the image to a set angle of rotation.
            </summary>
            <param name="allowAnimation">
            Allow animation the rotation event? If yes, the rotation will be animated from one angle to another.
            </param>
            <param name="angle">
            The angle of rotation to apply. Please provide a value between 0 and 360.
            </param>
            <param name="animationSpeed">
            The rotating animation speed in milliseconds to apply. Default speed is 500(ms).
            </param>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuImageButtonExtended.Load(System.String)">
            <summary>
            Sets the ImageLocation to the specified URL and displays the image indicated.
            </summary>
            <param name="url">The path for the image to display in the Image Button.</param>
            Exceptions:
            <exception cref="T:System.InvalidOperationException">Thrown if url is null or an empty string.</exception>
            <exception cref="T:System.Net.WebException">Thrown if url refers to an image on the Web that cannot be accessed.</exception>
            <exception cref="T:System.ArgumentException">Thrown if url refers to a file that is not an image.</exception>
            <exception cref="!:IO.FileNotFoundException">Thrown if url refers to a file that does not exist.</exception>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuImageButtonExtended.Load">
            <summary>
            Displays the image specified by the ImageLocation property of the Image Button.
            </summary>
            Exceptions:
            <exception cref="T:System.InvalidOperationException">Thrown if ImageLocation is null or an empty string.</exception>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuImageButtonExtended.LoadAsync">
            <summary>
            Loads the image asynchronously.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuImageButtonExtended.LoadAsync(System.String)">
            <summary>
            Loads the image at the specified location, asynchronously.
            </summary>
            <param name="url">The path for the image to display in the Image Button.</param>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuImageButtonExtended.CancelAsync">
            <summary>
            Cancels an asynchronous image load.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuImageButtonExtended.IsInDesignMode">
            <summary>
            Determines whether the hosting process is in design-mode.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuImageButtonExtended.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuImageButtonExtended.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuImageButtonExtended.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.ImageExtensions">
            <summary>
            Image-rendering extensions class for Bunifu Image Button.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.ImageExtensions.FlipOrientation">
            <summary>
            Provides flip-orientation options for image containers.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.ImageExtensions.FlipOrientation.Normal">
            <summary>
            Flip image to normal setting.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.ImageExtensions.FlipOrientation.Horizontal">
            <summary>
            Flip image horizontally.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.ImageExtensions.FlipOrientation.Vertical">
            <summary>
            Flip image vertically.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.ImageExtensions.Rotate(System.Drawing.Graphics,System.Double,System.Int32,System.Int32)">
            <summary>
            Rotates an image container to a specified angle or degree.
            </summary>
            <param name="graphics">The graphics object to be used.</param>
            <param name="rotation">The angle of rotation.</param>
            <param name="width">The final width of the image.</param>
            <param name="height">The final height of the image.</param>
        </member>
        <member name="M:Utilities.BunifuSnackbar.ImageExtensions.Flip(System.Drawing.Graphics,Utilities.BunifuSnackbar.ImageExtensions.FlipOrientation,System.Int32,System.Int32)">
            <summary>
            Flips an image container to a specified position.
            </summary>
            <param name="graphics">The graphics object to be used.</param>
            <param name="flip">The flip orientation.</param>
            <param name="width">The final width of the image.</param>
            <param name="height">The final height of the image.</param>
        </member>
        <member name="M:Utilities.BunifuSnackbar.ImageExtensions.Flip(System.Drawing.Image,Utilities.BunifuSnackbar.ImageExtensions.FlipOrientation)">
            <summary>
            Flips an image container to a specified position.
            </summary>
            <param name="graphics">The graphics object to be used.</param>
            <param name="flip">The flip orientation.</param>
        </member>
        <member name="M:Utilities.BunifuSnackbar.ImageExtensions.ToRotateFlip(Utilities.BunifuSnackbar.ImageExtensions.FlipOrientation)">
            <summary>
            Flips an image container to a specified position without an angle of rotation.
            </summary>
            <param name="flip">The flip orientation.</param>
        </member>
        <member name="T:Utilities.BunifuSnackbar.BunifuButton">
            <summary>
            Provides a highly customizable button with improved 
            styling options and additional feature improvements.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuButton.#ctor">
            <summary>
            Creates a new <see cref="T:Utilities.BunifuSnackbar.BunifuButton"/> control.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.BunifuButton.BorderStyles">
            <summary>
            Provides various styles for customizing the border.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuButton.BorderStyles.Solid">
            <summary>
            Defaults to a solid border style.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuButton.BorderStyles.Dash">
            <summary>
            Defaults to a dash border style.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuButton.BorderStyles.Dot">
            <summary>
            Defaults to a dotted border style.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.BunifuButton.ButtonStates">
            <summary>
            Defines various states in a Button's activity cycle.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuButton.ButtonStates.Idle">
            <summary>
            Denotes the Button's idle state.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuButton.ButtonStates.Hover">
            <summary>
            Denotes the Button's mouse-hover state.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuButton.ButtonStates.Pressed">
            <summary>
            Denotes the Button's mouse-press or click state.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuButton.ButtonStates.Disabled">
            <summary>
            Denotes the Button's disabled state.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.BunifuButton.state">
            <summary>
            [Internal] Defines various states in a control's activity cycle.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuButton.state.idle">
            <summary>
            There is no activity.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuButton.state.hover">
            <summary>
            The control is in mouse-hover state.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuButton.state.pressed">
            <summary>
            The control is in mouse-click or press state.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuButton.state.disabled">
            <summary>
            The control is disabled.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.AllowToggling">
            <summary>
            Gets or sets a value indicating whether 
            the button will be automatically toggled 
            to receive or release focus when clicked.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.AutoGenerateColors">
            <summary>
            When set to true, the button's <see cref="P:Utilities.BunifuSnackbar.BunifuButton.IdleFillColor"/> 
            and <see cref="P:Utilities.BunifuSnackbar.BunifuButton.IdleBorderColor"/> will be used to generate 
            colors for the various states supported.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.AutoSize">
            <summary>
            Specifies whether the Button will automatically 
            size it's with to fit its contents. Use <see cref="P:Utilities.BunifuSnackbar.BunifuButton.TextMarginLeft"/> 
            property to set the <see cref="P:Utilities.BunifuSnackbar.BunifuButton.Text"/> padding (edges' distance).
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.IndicateFocus">
            <summary>
            Gets or sets a value indicating whether the 
            Button will provide a visual cue when focused.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.AnimationSpeed">
            <summary>
            Gets or sets the Button's animation speed (in milliseconds) 
            when moving from one state to another.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.IconPadding">
            <summary>
            Gets or sets the Button's padding for
            both the left and the right icon.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.IconMarginLeft">
            <summary>
            Gets or sets the Button's left icon margin.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.TextMarginLeft">
            <summary>
            Gets or sets the Button's left text margin.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.IdleBorderRadius">
            <summary>
            Gets or sets the Button's border radius when idle.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.IdleBorderThickness">
            <summary>
            Gets or sets the button's border thickness.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.ColorContrastOnHover">
            <summary>
            Sets how dark or light the button's color will 
            be whenever a mouse-hover event has occurred.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.ColorContrastOnClick">
            <summary>
            Sets how dark or light the button's color will 
            be whenever a mouse-click event has occurred.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.IconRightCursor">
            <summary>
            Gets or sets the Button's right icon cursor.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.IconLeftCursor">
            <summary>
            Gets or sets the Button's left icon cursor.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.IdleIconLeftImage">
            <summary>
            Gets or sets the Button's left icon when idle.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.IdleIconRightImage">
            <summary>
            Gets or sets the Button's right icon when idle.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.Font">
            <summary>
            Gets or sets the Button's default font.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.Text">
            <summary>
            Gets or sets the text associated with this control.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.DisabledBorderColor">
            <summary>
            Gets or sets the Button's border color when disabled.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.DisabledFillColor">
            <summary>
            Gets or sets the Button's background color when disabled.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.DisabledForecolor">
            <summary>
            Gets or sets the Button's foreground color when disabled.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.IdleBorderColor">
            <summary>
            Gets or sets the Button's border color when idle/inactive.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.IdleFillColor">
            <summary>
            Gets or sets the Button's background/fill color when idle.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.ForeColor">
            <summary>
            Gets or sets the Button's foreground color.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.OnIdleState">
            <summary>
            Gets or sets the Button's idle state design.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.onHoverState">
            <summary>
            Gets or sets the Button's hover state design.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.OnPressedState">
            <summary>
            Gets or sets the Button's pressed state design.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.BorderStyle">
            <summary>
            Gets or sets the Button's border style.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.FocusState">
            <summary>
            Gets or sets the state to use when the Button 
            contains focus while the cursor is away.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.DialogResult">
            <summary>
            Gets or sets the <see cref="P:Utilities.BunifuSnackbar.BunifuButton.DialogResult"/> returned by the Button.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.CustomizableEdges">
            <summary>
            Gets or sets the list of border edges that will 
            be customized whenever the border radius is applied.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.LeftIcon">
            <summary>
            Gets the left icon.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.RightIcon">
            <summary>
            Gets the right icon.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.UseDefaultRadiusAndThickness">
            <summary>
            Gets or sets a value indicating whether other states will automatically 
            use the idle state's border-radius and border-thickness.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.IsDefault">
            <summary>
            Gets or sets a value indicating whether the 
            Bunifu button control is the default button.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.Toggled">
            <summary>
            Gets a value indicating whether  
            the button has been clicked.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.OnDisabledState">
            <summary>
            Gets or sets the Button's disabled state design.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.ButtonText">
            <summary>
            Gets or sets the text associated with this control.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.ButtonTextMarginLeft">
            <summary>
            Gets or sets the Button's left text margin.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.PreferredHeight">
            <summary>
            Gets the preferred Button's height.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.BackColor">
            <summary>
            Gets or sets the Button's background color.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.BackColor1">
            <summary>
            [Internal] Gets or sets the initial Button's background color.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.BackgroundImage">
            <summary>
            Gets or sets the Button's background image.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.TextAlign">
            <summary>
            Gets or sets the Button's text alignment.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.BunifuButton.StateProperties">
            <summary>
            Provides options for use when creating a 
            list of properties for use when defining a  
            control's various activity states.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.StateProperties.BorderRadius">
            <summary>
            Gets or sets the control's border radius.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.StateProperties.BorderThickness">
            <summary>
            Gets or sets the control's border thickness.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.StateProperties.ForeColor">
            <summary>
            Gets or sets the control's foreground color.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.StateProperties.FillColor">
            <summary>
            Gets or sets the control's background/fill color.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.StateProperties.BorderColor">
            <summary>
            Gets or sets the control's border color.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.StateProperties.IconRightImage">
            <summary>
            Gets or sets the control's right icon-image.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.StateProperties.IconLeftImage">
            <summary>
            Gets or sets the control's left icon-image.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.StateProperties.BorderStyle">
            <summary>
            Gets or sets the control's border style.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuButton.StateProperties.ToString">
            <summary>
            Returns a string containing the object's 
            properties and their values.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.BunifuButton.BorderEdges">
            <summary>
            Includes the list of available border edges or dimensions 
            that can be customized or excluded when styling controls.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuButton.BorderEdges.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Utilities.BunifuSnackbar.BunifuButton.BorderEdges"/> class.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.BorderEdges.TopLeft">
            <summary>
             Gets or sets a value indicating whether 
             the top-left edge will be included.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.BorderEdges.TopRight">
            <summary>
             Gets or sets a value indicating whether 
             the top-right edge will be included.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.BorderEdges.BottomLeft">
            <summary>
             Gets or sets a value indicating whether 
             the bottom-left edge will be included.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.BorderEdges.BottomRight">
            <summary>
             Gets or sets a value indicating whether 
             the bottom-right edge will be included.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuButton.BorderEdges.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing the 
            list of properties and their applied values.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuButton.CreateParams">
            <summary>
            Gets the list of created control parameters.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuButton.GetCurrentState">
            <summary>
            Gets the Button's current activity state.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuButton.Refresh">
            <summary>
            Redraws the control's layout.
            </summary>
            <param name="useTimer">Loop redraws using a timer?</param>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuButton.ApplyState(Utilities.BunifuSnackbar.BunifuButton.StateProperties)">
            <summary>
            Sets a specified state to the button.
            </summary>
            <param name="state">
            The state to apply.
            </param>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuButton.PerformClick">
            <summary>
            Generates a 'Click' event for the button.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuButton.Reset">
            <summary>
            Resets the control's temporary values to their defaults.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuButton.Reset(Utilities.BunifuSnackbar.BunifuButton.StateProperties)">
            <summary>
            Resets the button's current visual state to another state.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuButton.ResetColors">
            <summary>
            Resets the control's temporary color values to their defaults.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuButton.NotifyDefault(System.Boolean)">
            <summary>
            Notifies the Button whether it is the default button 
            so that it can adjust its appearance accordingly.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuButton.GenerateColors(System.Boolean)">
            <summary>
            Generates colors for the the various states supported using 
            the button's <see cref="P:Utilities.BunifuSnackbar.BunifuButton.IdleFillColor"/> and 
            <see cref="P:Utilities.BunifuSnackbar.BunifuButton.IdleBorderColor"/> properties.
            </summary>
            <param name="invalidate">Redraw the control's surface?</param>
        </member>
        <member name="E:Utilities.BunifuSnackbar.BunifuButton.IconLeftClick">
            <summary>
            Occurs when the Button's left icon is clicked.
            </summary>
        </member>
        <member name="E:Utilities.BunifuSnackbar.BunifuButton.IconRightClick">
            <summary>
            Occurs when the Button's right icon is clicked.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.BunifuButton.BunifuButtonActionList">
            <summary>
            Initializes a new instance of the <see cref="T:Utilities.BunifuSnackbar.BunifuButton.BunifuButtonActionList"/> class.
            </summary>
            <seealso cref="T:System.ComponentModel.Design.DesignerActionList" />
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuButton.BunifuButtonActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuButton.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuButton.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuButton.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.BunifuFormDock">
            <summary>
            Provides enhanced and customizable form-docking capabilities to borderless Windows Forms.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.#ctor">
            <summary>
            Creates a new Bunifu Form Dock component.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.BunifuFormDock.BunifuWindowStates">
            <summary>
            Provides a general list of window-states available
            for use in borderless Forms displayed on-screen.
            This mimics the standard <see cref="T:System.Windows.Forms.FormWindowState"/>
            enumeration but has been tailored for handling borderless forms.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuFormDock.BunifuWindowStates.Normal">
            <summary>
            A normal window.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuFormDock.BunifuWindowStates.Maximized">
            <summary>
            A maximized window.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuFormDock.BunifuWindowStates.Minimized">
            <summary>
            A minimized window.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.BunifuFormDock.FormWindowStates">
            <summary>
            Provides a general list of window-states available
            for use in borderless Forms displayed on-screen.
            This mimics the standard <see cref="T:System.Windows.Forms.FormWindowState"/>
            enumeration but has been tailored for handling borderless forms.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuFormDock.FormWindowStates.Normal">
            <summary>
            A normal window.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuFormDock.FormWindowStates.Maximized">
            <summary>
            A maximized window.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuFormDock.FormWindowStates.Minimized">
            <summary>
            A minimized window.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.BunifuFormDock.DockIndicators">
            <summary>
            Provides a list of available docking indicators 
            visible when dragging forms on-screen.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuFormDock.DockIndicators.None">
            <summary>
            No indicator is shown.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuFormDock.DockIndicators.Left">
            <summary>
            The left dock indicator.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuFormDock.DockIndicators.Right">
            <summary>
            The right dock indicator.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuFormDock.DockIndicators.TopLeft">
            <summary>
            The top-left dock indicator.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuFormDock.DockIndicators.TopRight">
            <summary>
            The top-right dock indicator.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuFormDock.DockIndicators.FullScreen">
            <summary>
            The full-screen dock indicator.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuFormDock.DockIndicators.BottomLeft">
            <summary>
            The bottom-left dock indicator.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuFormDock.DockIndicators.BottomRight">
            <summary>
            The bottom-right dock indicator.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.BunifuFormDock.DockPositions">
            <summary>
            Provides a list of supported form-docking positions.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuFormDock.DockPositions.None">
            <summary>
            No dock position applied.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuFormDock.DockPositions.Left">
            <summary>
            The left dock position.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuFormDock.DockPositions.Right">
            <summary>
            The right dock position.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuFormDock.DockPositions.TopLeft">
            <summary>
            Tge top-left dock position.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuFormDock.DockPositions.TopRight">
            <summary>
            The top-right dock position.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuFormDock.DockPositions.FullScreen">
            <summary>
            The full-screen dock position.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuFormDock.DockPositions.BottomLeft">
            <summary>
            The bottom-left dock position.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuFormDock.DockPositions.BottomRight">
            <summary>
            The bottom-right dock position.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuFormDock.AllowHidingBottomRegion">
            <summary>
            When set to true, a white region that is drawn
            at the bottom of the parent form will be hidden; 
            however, when set to false, this region will be 
            exposed at runtime.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuFormDock.BorderOptions">
            <summary>
            Gets or sets Form border options that can be 
            used to add and style borders on the parent form.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuFormDock.DockingOptions">
            <summary>
            Gets or sets the docking options to be used in the parent form.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuFormDock.TitleBarOptions">
            <summary>
            Gets or sets the list of options for selecting and managing 
            any control that is set as the parent form's Title Bar.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuFormDock.AllowDockingKeys">
            <summary>
            Gets or sets a value indicating whether the parent form will allow 
            the standard Windows docking keys to be supported at runtime.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuFormDock.AllowFormDragging">
            <summary>
            Gets or sets a value indicating whether the parent form will be draggable.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuFormDock.AllowFormDropShadow">
            <summary>
            Gets or sets a value indicating whether the parent form will have a drop-shadow along its borders..
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuFormDock.AllowFormResizing">
            <summary>
            Gets or sets a value indicating whether the parent form will be resizable when borderless.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuFormDock.AllowOpacityChangesWhileDragging">
            <summary>
            Gets or sets a value indicating whether the parent form's opacity or transparency 
            will be changed whenever it's being dragged on screen.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuFormDock.ShowCursorChanges">
            <summary>
            Gets or sets a value indicating whether cursor-changes 
            will be provided when about to dock the parent form.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuFormDock.ShowDockingIndicators">
            <summary>
            Gets or sets a value indicating whether the docking indicators 
            will be previewed before the parent form is docked.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuFormDock.DockingIndicatorsColor">
            <summary>
            Gets or sets the color of the docking indicators.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuFormDock.DockingIndicatorsOpacity">
            <summary>
            Gets or sets the opacity or transparency of the docking indicators.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuFormDock.FormDraggingOpacity">
            <summary>
            Gets or sets the opacity or transparency of the parent form when dragging.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuFormDock.WindowState">
            <summary>
            Gets or sets the window-state for the form.
            This mimics the standard <see cref="T:System.Windows.Forms.FormWindowState"/> enumeration
            but has been tailored for handling borderless forms.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuFormDock.BunifuWindowState">
            <summary>
            Gets or sets the window-state for the form.
            This mimics the standard <see cref="T:System.Windows.Forms.FormWindowState"/> enumeration
            but has been tailored for handling borderless forms.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuFormDock.ContainerControl">
            <summary>
            Gets or sets the container control within the parent form.
            In most cases, this refers and results to the parent form.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuFormDock.ParentForm">
            <summary>
            Gets or sets the container control as the parent form.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuFormDock.Site">
            <summary>
            Overrides the ISite functionality, getting the main or parent
            container control in the Form. This is overriden to get the
            component's host or parent form.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.AddBottomSeparator(System.Drawing.Color,System.Int32,System.Boolean)">
            <summary>
            Adds a bottom Line Separator to the attached Parent Form.
            </summary>
            <param name="color">Sets the background color of the Separator.</param>
            <param name="height">Sets the height of the Separator.</param>
            <param name="dockSeparator">
            Allow docking the Separator to the bottom area? (Disabled by default)
            If allowed, the Separator will be docked to the bottom-most area
            of the Parent Form; else, it will be anchored to the bottom-most area.
            Both options however perform the same way at runtime.
            </param>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.SubscribeControlToDragEvents(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Subscribes any control specified to the drag  
            event operations performed on the parent form.
            </summary>
            <param name="control">
            The control to be subscribed to the drag events.
            </param>
            <param name="isPartOfTitleBar">
            If the control is a part of the Title Bar section, set this parameter 
            to true in order for the control to be subscribed to the 
            <see cref="P:Utilities.BunifuSnackbar.TitleBarOptions.DoubleClickToExpandWindow"/> setting.
            </param>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.SubscribeControlsToDragEvents(System.Windows.Forms.Control[],System.Boolean)">
            <summary>
            Subscribes an array of controls specified to the drag  
            event operations performed on the parent form.
            </summary>
            <param name="controls">
            An array of controls to be subscribed to the drag events.
            </param>
            <param name="arePartOfTitleBar">
            If the controls are part of the Title Bar section, set this parameter 
            to true in order for the controls to be subscribed to the 
            <see cref="P:Utilities.BunifuSnackbar.TitleBarOptions.DoubleClickToExpandWindow"/> setting.
            </param>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.UnsubscribeControlToDragEvents(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Unsubscribes any control attached to the drag  
            event operations performed on the parent form.
            </summary>
            <param name="control">
            The control previously attached to the drag events.
            </param>
            <param name="wasPartOfTitleBar">
            If the control was a part of the Title Bar section, set this parameter 
            to true in order for the control to be unsubscribed to the 
            <see cref="P:Utilities.BunifuSnackbar.TitleBarOptions.DoubleClickToExpandWindow"/> setting.
            </param>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.UnsubscribeControlsToDragEvents(System.Windows.Forms.Control[],System.Boolean)">
            <summary>
            Unsubscribes an array of controls attached to the drag  
            event operations performed on the parent form.
            </summary>
            <param name="controls">
            An array of controls previously attached to the drag events.
            </param>
            <param name="werePartOfTitleBar">
            If the controls were part of the Title Bar section, set this parameter 
            to true in order for the controls to be unsubscribed to the 
            <see cref="P:Utilities.BunifuSnackbar.TitleBarOptions.DoubleClickToExpandWindow"/> setting.
            </param>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.ParentFormIsNormal">
            <summary>
            Checks if the parent form is in the normal state.
            </summary>
            <returns><see cref="!:true"/> or <see cref="!:false"/></returns>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.DockedLeft">
            <summary>
            Checks if the parent form is docked to the left.
            </summary>
            <returns><see cref="!:true"/> or <see cref="!:false"/></returns>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.DockedTopLeft">
            <summary>
            Checks if the parent form is docked to the top-left.
            </summary>
            <returns><see cref="!:true"/> or <see cref="!:false"/></returns>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.DockedBottomLeft">
            <summary>
            Checks if the parent form is docked to the bottom-left.
            </summary>
            <returns><see cref="!:true"/> or <see cref="!:false"/></returns>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.DockedRight">
            <summary>
            Checks if the parent form is docked to the right.
            </summary>
            <returns><see cref="!:true"/> or <see cref="!:false"/></returns>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.DockedTopRight">
            <summary>
            Checks if the parent form is docked to the ltop-right.
            </summary>
            <returns><see cref="!:true"/> or <see cref="!:false"/></returns>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.DockedBottomRight">
            <summary>
            Checks if the parent form is docked to the bottom-right.
            </summary>
            <returns><see cref="!:true"/> or <see cref="!:false"/></returns>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.ExpandWindow">
            <summary>
            Expands the parent form to fit the current screen dimensions.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.DockLeft">
            <summary>
            Docks the parent form to the left area of the screen.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.DockTopLeft">
            <summary>
            Docks the parent form to the top-left corner of the screen.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.DockBottomLeft">
            <summary>
            Docks the parent form to the bottom-left corner of the screen.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.DockRight">
            <summary>
            Docks the parent form to the right area of the screen.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.DockTopRight">
            <summary>
            Docks the parent form to the top-right corner of the screen.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.DockBottomRight">
            <summary>
            Docks the parent form to the bottom-right corner of the screen.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.IndicateFullScreenDocking">
            <summary>
            Indicates that the parent form is about to be docked to full-screen mode.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.IndicateLeftDocking">
            <summary>
            Indicates that the parent form is about to be docked to the left screen area.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.IndicateTopLeftDocking">
            <summary>
            Indicates that the parent form is about to be docked to the top-left screen area.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.IndicateBottomLeftDocking">
            <summary>
            Indicates that the parent form is about to be docked to the bottom-left screen area.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.IndicateRightDocking">
            <summary>
            Indicates that the parent form is about to be docked to the right screen area.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.IndicateTopRightDocking">
            <summary>
            Indicates that the parent form is about to be docked to the top-right screen area.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.IndicateBottomRightDocking">
            <summary>
            Indicates that the parent form is about to be docked to the bottom-right screen area.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.IndicateNormalPositioning">
            <summary>
            Indicates that the parent form is about to be reverted to
            its normal or original dimensions as per its size and location.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.HideDockingIndicators">
            <summary>
            Hides any visual cues that may have been displayed when
            docking the parent form.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.ShowDockingAreaIndicators">
            <summary>
            Displays any visual cues based on the area the parent form
            is about to be docked to.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.AddFormBorders(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Adds borders to the parent form.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.MaskBottomMargin">
            <summary>
            Masks the bottom margin added to the
            Parent Form when a drop-shadow is provided.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.CreateBitmap(System.Drawing.Color,System.Drawing.Size)">
            <summary>
            Creates a colored Bitmap Image.
            </summary>
            <param name="color">The <see cref="T:System.Drawing.Color"/> to be applied.</param>
            <param name="size">The <see cref="T:System.Drawing.Size"/> of the Bitmap.</param>
            <returns></returns>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.IsInDesignMode">
            <summary>
            Determines whether the hosting process is in design-mode.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.ProvideFirstTimeOptionsGuide">
            <summary>
            This method takes the user through a quick set of first-time options
            available to use in order to guide them on the component's usage.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.OnLoad(System.Object,System.EventArgs)">
            <summary>
            Raises the parent form's "OnLoad" event.
            </summary>
            <param name="sender">The sender control.</param>
            <param name="e">Provides data for the parent form's "OnLoad" event. </param>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.OnResizeEnd(System.Object,System.EventArgs)">
            <summary>
            Raises the parent form's "OnResizeEnd" event.
            </summary>
            <param name="sender">The sender control.</param>
            <param name="e">Provides data for the parent form's "OnResizeEnd" event. </param>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the component's "KeyDown" event.
            </summary>
            <param name="sender">The sender control.</param>
            <param name="e">Provides data for the control's "KeyDown" event. </param>
        </member>
        <member name="E:Utilities.BunifuSnackbar.BunifuFormDock.FormDragging">
            <summary>
            Occurs whenever the parent form is being dragged.
            </summary>
        </member>
        <member name="E:Utilities.BunifuSnackbar.BunifuFormDock.DockChanged">
            <summary>
            Occurs whenever the <see cref="P:Utilities.BunifuSnackbar.BunifuFormDock.DockingOptions"/> property has been changed.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.BunifuFormDock.FormDraggingEventArgs">
            <summary>
            Provides data for the <see cref="E:Utilities.BunifuSnackbar.BunifuFormDock.FormDragging"/> event.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.FormDraggingEventArgs.#ctor(System.Drawing.Point,Utilities.BunifuSnackbar.BunifuFormDock.DockIndicators)">
            <summary>
            Provides data for the <see cref="E:Utilities.BunifuSnackbar.BunifuFormDock.FormDragging"/> event.
            </summary>
            <param name="cursorPosition">The position of the cursor on the screen.</param>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuFormDock.FormDraggingEventArgs.CursorPosition">
            <summary>
            Gets the current position of the cursor.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuFormDock.FormDraggingEventArgs.ShownIndicator">
            <summary>
            Gets the indicator that is currently being shown
            as the parent form is being dragged.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.BunifuFormDock.DockChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:Utilities.BunifuSnackbar.BunifuFormDock.DockChanged"/> event.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.DockChangedEventArgs.#ctor(Utilities.BunifuSnackbar.BunifuFormDock.DockPositions)">
            <summary>
            Provides data for the <see cref="E:Utilities.BunifuSnackbar.BunifuFormDock.DockChanged"/> event.
            </summary>
            <param name="dockPosition">The currently docked position of the parent form.</param>
        </member>
        <member name="P:Utilities.BunifuSnackbar.BunifuFormDock.DockChangedEventArgs.DockPosition">
            <summary>
            Gets the docked position the parent form is on.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the component's "MouseUp" event. 
            Use this to attach any control's "MouseUp" event to this "OnMouseUp" event.
            </summary>
            <param name="sender">The sender control.</param>
            <param name="e">Provides data for the control's "MouseUp" event. </param>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the component's "MouseMove" event.
            Use this to attach any control's "MouseMove" event to this "OnMouseMove" event.
            </summary>
            <param name="sender">The sender control.</param>
            <param name="e">Provides data for the control's "MouseMove" event. </param>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the component's "MouseDown" event.
            Use this to attach any control's "MouseDown" event to this "OnMouseDown" event.
            </summary>
            <param name="sender">The sender control.</param>
            <param name="e">Provides data for the control's "MouseDown" event. </param>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.OnDoubleClickTitleBar(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the attached Title Bar's "MouseDoubleClick" event.
            </summary>
            Use this to attach any control's "MouseDoubleClick" event to this "MouseDoubleClick" event.
            <param name="sender">The sender control.</param>
            <param name="e">Provides data for the control's "MouseDoubleClick" event. </param>
        </member>
        <member name="T:Utilities.BunifuSnackbar.BunifuFormDock.BunifuComponentActionList">
            <summary>
            Initializes a new instance of the <see cref="T:Utilities.BunifuSnackbar.BunifuFormDock.BunifuComponentActionList"/> class.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.BunifuComponentActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.BunifuFormDock.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Utilities.BunifuSnackbar.BunifuFormDock.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.WindowHandler">
            <summary>
            Attaches, accesses and extends any Windows Form specified outside its own class.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.WindowHandler.#ctor(System.Windows.Forms.Form,System.Boolean)">
            <summary>
            Creates a window handle to any specified Windows Form.
            </summary>
            <param name="parent">The parent form to handle.</param>
            <param name="allowResizing">Allow the parent form to resize?</param>
        </member>
        <member name="P:Utilities.BunifuSnackbar.WindowHandler.BunifuFormDock">
            <summary>
            Gets or sets the Bunifu Form Dock instance to be accessed and used.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.DockOptions">
            <summary>
            Provides a list of supported docking options in Windows Forms.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.DockOptions.#ctor">
            <summary>
            Creates a new Docking Options class.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.DockOptions.DockAll">
            <summary>
             Gets or sets a value indicating whether the parent form can be docked to all supported screen areas.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.DockOptions.DockLeft">
            <summary>
             Gets or sets a value indicating whether the parent form can be docked to the left screen area.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.DockOptions.DockRight">
            <summary>
             Gets or sets a value indicating whether the parent form can be docked to the right screen area.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.DockOptions.DockFullScreen">
            <summary>
             Gets or sets a value indicating whether the parent form can be docked to fill the screen's dimensions.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.DockOptions.DockTopLeft">
            <summary>
             Gets or sets a value indicating whether the parent form can be docked to the top-left screen area.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.DockOptions.DockTopRight">
            <summary>
             Gets or sets a value indicating whether the parent form can be docked to the top-right screen area.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.DockOptions.DockBottomLeft">
            <summary>
             Gets or sets a value indicating whether the parent form can be docked to the bottom-left screen area.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.DockOptions.DockBottomRight">
            <summary>
             Gets or sets a value indicating whether the parent form can be docked to the bottom-right screen area.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.DockOptions.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing the list of docking options 
            provided and their applied statuses separated by semi-colons.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.TitleBarOptions">
            <summary>
            Provides a list of options for selecting and managing any 
            control that is to be used as the parent form's Title Bar.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.TitleBarOptions.#ctor">
            <summary>
            Creates a new Title Bar Options class.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.TitleBarOptions.BunifuFormDock">
            <summary>
            Gets or sets the Bunifu Form Dock instance to be accessed and used.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.TitleBarOptions.TitleBarControl">
            <summary>
             Gets or sets the control to be used as the parent form's Title Bar.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.TitleBarOptions.DoubleClickToExpandWindow">
            <summary>
             Gets or sets a value indicating whether the Title Bar control 
             will expand the parent form once a user double-clicks on it.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.TitleBarOptions.UseBackColorOnDockingIndicators">
            <summary>
             Gets or sets a value indicating whether the docking indicators
             will inherit the Title Bar's background color.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSnackbar.TitleBarOptions.AllowFormDragging">
            <summary>
             Gets or sets a value indicating whether the Title Bar control 
             will be allowed to drag the parent form at runtime.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.TitleBarOptions.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing the list of Title Bar options 
            provided and their applied property values separated by semi-colons.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.FormBorderOptions">
            <summary>
            Provides a list of options for customizing
            a borderless Form's border regions.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.FormBorderOptions.#ctor">
            <summary>
            Creates a new Form Border Options class.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.FormBorderOptions.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing the list of Form Border Options 
            provided and their applied property values separated by semi-colons.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSnackbar.FormBorderOptions.BorderRegion">
            <summary>
            Provides a list of options for customizing
            a borderless Form's single border region.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.FormBorderOptions.BorderRegion.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing the list of Form Border Options 
            provided and their applied property values separated by semi-colons.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.Indicator.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Indicator.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Indicator.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSnackbar.Views.SnackbarView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Views.SnackbarView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Utilities.BunifuSnackbar.Views.SnackbarView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Bunifu.UI.WinForms.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.Properties.Resources.error">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.Properties.Resources.info">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.Properties.Resources.success">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.Properties.Resources.warning">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:Bunifu.UI.WinForms.BunifuSnackbar">
            <summary>
            Deliver stunningly neat, time-bound, and brief messages 
            about application processes during or after execution.
            </summary>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuSnackbar.#ctor">
            <summary>
            Creates a new <see cref="T:Bunifu.UI.WinForms.BunifuSnackbar"/> component.
            </summary>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuSnackbar.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Creates a new <see cref="T:Bunifu.UI.WinForms.BunifuSnackbar"/> component.
            </summary>
        </member>
        <member name="T:Bunifu.UI.WinForms.BunifuSnackbar.Hosts">
            <summary>
            Provides a list of supported hosts 
            used to contain snackbars.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuSnackbar.Hosts.Screen">
            <summary>
            The current screen or monitor.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuSnackbar.Hosts.Control">
            <summary>
            A standard control or user control.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuSnackbar.Hosts.FormOwner">
            <summary>
            The parent form owning the snackbar.
            </summary>
        </member>
        <member name="T:Bunifu.UI.WinForms.BunifuSnackbar.Positions">
            <summary>
            Provides a list of positions to be 
            used when displaying the snackbar.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuSnackbar.Positions.TopLeft">
            <summary>
            The top-left area.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuSnackbar.Positions.TopCenter">
            <summary>
            The top-center area.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuSnackbar.Positions.TopRight">
            <summary>
            The top-right area.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuSnackbar.Positions.MiddleLeft">
            <summary>
            The top-right area.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuSnackbar.Positions.MiddleCenter">
            <summary>
            The middle-center area.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuSnackbar.Positions.MiddleRight">
            <summary>
            The middle-right area.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuSnackbar.Positions.BottomLeft">
            <summary>
            The bottom-left area.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuSnackbar.Positions.BottomCenter">
            <summary>
            The bottom-center area.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuSnackbar.Positions.BottomRight">
            <summary>
            The bottom-right area.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuSnackbar.Positions.Custom">
            <summary>
            Lets you specify your own custom position 
            using the <see cref="!:CustomPosition"/> property.
            </summary>
        </member>
        <member name="T:Bunifu.UI.WinForms.BunifuSnackbar.MessageTypes">
            <summary>
            Provides a default list of snackbar message 
            types that can be used in various scenarios.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuSnackbar.MessageTypes.Information">
            <summary>
            Displays an information message.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuSnackbar.MessageTypes.Success">
            <summary>
            Displays a success message.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuSnackbar.MessageTypes.Warning">
            <summary>
            Displays a warning message.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuSnackbar.MessageTypes.Error">
            <summary>
            Displays an error message.
            </summary>
        </member>
        <member name="T:Bunifu.UI.WinForms.BunifuSnackbar.SnackbarResult">
            <summary>
            Specifies identifiers to indicate 
            the return value of a snackbar.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuSnackbar.SnackbarResult.AutoClosed">
            <summary>
            The snackbar return value is <see cref="F:Bunifu.UI.WinForms.BunifuSnackbar.SnackbarResult.AutoClosed"/>, 
            meaning the snackabr ended its duration of display.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuSnackbar.SnackbarResult.UserClosed">
            <summary>
            The snackbar return value is <see cref="F:Bunifu.UI.WinForms.BunifuSnackbar.SnackbarResult.UserClosed"/>, 
            meaning the snackbar was closed by the end user.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuSnackbar.SnackbarResult.ActionClicked">
            <summary>
            The snackbar return value is <see cref="F:Bunifu.UI.WinForms.BunifuSnackbar.SnackbarResult.ActionClicked"/>, 
            meaning the snackbar's Action button was clicked.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.AllowDragging">
            <summary>
            Gets or sets a value indicating whether the 
            Snackbar will be draggable once displayed.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.ClickToClose">
            <summary>
            Gets or sets a value indicating whether the 
            Snackbar will be closed once clicked by the user.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.DoubleClickToClose">
            <summary>
            Gets or sets a value indicating whether the Snackbar 
            will be closed once double-clicked by the user.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.AllowMultipleViews">
            <summary>
            Gets or sets a value indicating whether multiple 
            instances of the Snackbar will be displayed at a time.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.ShowCloseIcon">
            <summary>
            Gets or sets a value indicating whether 
            the close icon will be displayed.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.ShowIcon">
            <summary>
            Gets or sets a value indicating whether  
            the Snackbar icon will be displayed.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.ShowBorders">
            <summary>
            Gets or sets a value indicating whether the Snackbar 
            will display its borders rather than shadows.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.ShowShadows">
            <summary>
            Gets or sets a value indicating whether the Snackbar 
            will display its shadows rather than borders.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.FadeCloseIcon">
            <summary>
            Gets or sets a value indicating whether 
            the close icon will fade when inactive.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.ZoomCloseIcon">
            <summary>
            Gets or sets a value indicating whether the 
            close icon will zoom-in when hovered onto.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.Margin">
            <summary>
            Gets or sets the Snackbar's overall 
            distance between its host and its edges.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.ViewsMargin">
            <summary>
            Gets or sets the distance between Snackbars whenever multiple 
            views are enabled using the property <see cref="P:Bunifu.UI.WinForms.BunifuSnackbar.AllowMultipleViews"/>.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.MaximumViews">
            <summary>
            Gets or sets the maximum number of Snackbars 
            that can be visible at a given time.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.DurationAfterIdle">
            <summary>
            Gets or sets the duration the Snackbar will remain 
            visible after it receives and then loses mouse focus.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.MessageRightMargin">
            <summary>
            Gets or sets the Snackbar's message right margin, 
            or distance between the message and the closing icon.
            Please note that the minimum size for display will be 
            established beyond the user-provided margin.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.InformationOptions">
            <summary>
            Gets the list of customization options provided  
            for the Snackbar's informational messages.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.SuccessOptions">
            <summary>
            Gets the list of customization options provided 
            for the Snackbar's success messages.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.WarningOptions">
            <summary>
            Gets the list of customization options provided 
            for the Snackbar's warning messages.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.ErrorOptions">
            <summary>
            Gets the list of customization options provided 
            for the Snackbar's error messages.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.MinimumSize">
            <summary>
            Gets or sets the minimum size the 
            Snackbar can be auto-resized to.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.MaximumSize">
            <summary>
            Gets or sets the maximum size the 
            Snackbar can be auto-resized to.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.Host">
            <summary>
            Gets or sets the host that will 
            be used to contain the Snackbar.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.HasAvailableAction">
            <summary>
            Gets a value determining whether an
            action was provided for the Snackbar.
            </summary>
        </member>
        <member name="T:Bunifu.UI.WinForms.BunifuSnackbar.CustomizationOptions">
            <summary>
            Provides a list of supported customization 
            options for Snackbar messages.
            </summary>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuSnackbar.CustomizationOptions.#ctor">
            <summary>
            Initializes a new instance of 
            <see cref="T:Bunifu.UI.WinForms.BunifuSnackbar.CustomizationOptions"/> class.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.CustomizationOptions.ActionForeColor">
            <summary>
            Gets or sets the action button's foreground color.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.CustomizationOptions.ActionBackColor">
            <summary>
            Gets or sets the action button's background color.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.CustomizationOptions.ActionBorderColor">
            <summary>
            Gets or sets the action button's border color.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.CustomizationOptions.CloseIconColor">
            <summary>
            Gets or sets the Snackbar's close icon color.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.CustomizationOptions.BackColor">
            <summary>
            Gets or sets the Snackbar's background color.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.CustomizationOptions.BorderColor">
            <summary>
            Gets or sets the Snackbar's border color.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.CustomizationOptions.ForeColor">
            <summary>
            Gets or sets the message's foreground color.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.CustomizationOptions.ActionBorderRadius">
            <summary>
            Gets or sets the action button's border radius.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.CustomizationOptions.IconLeftMargin">
            <summary>
            Gets or sets the Snackbar icon's left margin.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.CustomizationOptions.Icon">
            <summary>
            Gets or sets the Snackbar's icon.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.CustomizationOptions.Font">
            <summary>
            Gets or sets the message's font.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuSnackbar.CustomizationOptions.ActionFont">
            <summary>
            Gets or sets the action button's font.
            </summary>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuSnackbar.CustomizationOptions.ToString">
            <summary>
            Returns a string containing the list of applied object propeties.
            </summary>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuSnackbar.Show(System.Windows.Forms.Form,System.String)">
            <summary>
            Displays a Snackbar with specified text.
            </summary>
            <param name="owner">The Form owning the Snackbar.</param>
            <param name="message">The Snackbar message to be displayed.</param>
            <returns>A <see cref="T:Bunifu.UI.WinForms.BunifuSnackbar.SnackbarResult"/>.</returns>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuSnackbar.Show(System.Windows.Forms.Form,System.String,Bunifu.UI.WinForms.BunifuSnackbar.MessageTypes)">
            <summary>
            Displays a Snackbar with specified text.
            </summary>
            <param name="owner">The Form owning the Snackbar.</param>
            <param name="message">The Snackbar message to be displayed.</param>
            <param name="type">The type of message to be displayed.</param>
            <returns>A <see cref="T:Bunifu.UI.WinForms.BunifuSnackbar.SnackbarResult"/>.</returns>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuSnackbar.Show(System.Windows.Forms.Form,System.String,Bunifu.UI.WinForms.BunifuSnackbar.MessageTypes,System.Int32)">
            <summary>
            Displays a Snackbar with specified text.
            </summary>
            <param name="owner">The Form owning the Snackbar.</param>
            <param name="message">The Snackbar message to be displayed.</param>
            <param name="type">The type of message to be displayed.</param> 
            <param name="duration">
            The time it will take before the 
            Snackbar automatically closes. 
            </param>
            <returns>A <see cref="T:Bunifu.UI.WinForms.BunifuSnackbar.SnackbarResult"/>.</returns>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuSnackbar.Show(System.Windows.Forms.Form,System.String,Bunifu.UI.WinForms.BunifuSnackbar.MessageTypes,System.Int32,System.String)">
            <summary>
            Displays a Snackbar with specified text.
            </summary>
            <param name="owner">The Form owning the Snackbar.</param>
            <param name="message">The Snackbar message to be displayed.</param>
            <param name="type">The type of message to be displayed.</param>
            <param name="duration">
            The time it will take before the 
            Snackbar automatically closes. 
            </param>
            <param name="action">
            Specify the text to be displayed
            in the action button.
            </param>
            <returns>A <see cref="T:Bunifu.UI.WinForms.BunifuSnackbar.SnackbarResult"/>.</returns>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuSnackbar.Show(System.Windows.Forms.Form,System.String,Bunifu.UI.WinForms.BunifuSnackbar.MessageTypes,System.Int32,System.String,Bunifu.UI.WinForms.BunifuSnackbar.Positions)">
            <summary>
            Displays a Snackbar with specified text.
            </summary>
            <param name="owner">The Form owning the Snackbar.</param>
            <param name="message">The Snackbar message to be displayed.</param>
            <param name="type">The type of message to be displayed.</param>
            <param name="position">
            The relative area or position where 
            the Snackbar will be displayed.
            </param>
            <param name="duration">
            The time it will take before the 
            Snackbar automatically closes. 
            </param>
            <param name="action">
            Specify the text to be displayed
            in the action button.
            </param>
            <returns>A <see cref="T:Bunifu.UI.WinForms.BunifuSnackbar.SnackbarResult"/>.</returns>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuSnackbar.Show(System.Windows.Forms.Form,System.String,Bunifu.UI.WinForms.BunifuSnackbar.MessageTypes,System.Int32,System.String,Bunifu.UI.WinForms.BunifuSnackbar.Positions,Bunifu.UI.WinForms.BunifuSnackbar.Hosts)">
            <summary>
            Displays a Snackbar with specified text.
            </summary>
            <param name="owner">The Form owning the Snackbar.</param>
            <param name="message">The Snackbar message to be displayed.</param>
            <param name="type">The type of message to be displayed.</param>
            <param name="position">
            The relative area or position where 
            the Snackbar will be displayed.
            </param>
            <param name="host">
            The specific container that 
            will host the Snackbar.
            </param>
            <param name="duration">
            The time it will take before the 
            Snackbar automatically closes. 
            </param>
            <param name="action">
            Specify the text to be displayed
            in the action button.
            </param>
            <returns>A <see cref="T:Bunifu.UI.WinForms.BunifuSnackbar.SnackbarResult"/>.</returns>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuSnackbar.Show(System.Windows.Forms.Form,System.Windows.Forms.Control,System.Int32,Bunifu.UI.WinForms.BunifuSnackbar.Positions,Bunifu.UI.WinForms.BunifuSnackbar.Hosts)">
            <summary>
            Displays a Snackbar with a custom control as its primary content.
            </summary>
            <param name="owner">The Form owning the Snackbar.</param>
            <param name="displayControl">
            The control to be displayed in-place-of 
            the default snackbar content.
            </param>
            <param name="duration">
            The time it will take before the 
            Snackbar automatically closes. 
            </param>
            <param name="position">
            The relative area or position where 
            the Snackbar will be displayed.
            </param>
            <param name="host">
            The specific container that 
            will host the Snackbar.
            </param>
            <returns>A <see cref="T:Bunifu.UI.WinForms.BunifuSnackbar.SnackbarResult"/>.</returns>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuSnackbar.Close">
            <summary>
            Closes the currently active Snackbar.
            </summary>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuSnackbar.CloseAll">
            <summary>
            Closes all the currently displayed Snackbars.
            </summary>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuSnackbar.ChangeBitmapColor(System.Drawing.Bitmap,System.Drawing.Color)">
            <summary>
            Lets you change the color(s) of a  
            Bitmap image to a monochrome color.
            </summary>
            <param name="bitmapImage">The Bitmap image to use.</param>
            <param name="color">The resulting color of the Bitmap.</param>
            <returns>The resulting colored Bitmap image.</returns>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuSnackbar.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuSnackbar.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuSnackbar.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Bunifu.UI.WinForms.SnackbarExtensions">
            <summary>
            Provides extension methods that can  
            be utilized with Bunifu Snackbars.
            </summary>
        </member>
        <member name="M:Bunifu.UI.WinForms.SnackbarExtensions.Then(Bunifu.UI.WinForms.BunifuSnackbar.SnackbarResult,System.Action{Bunifu.UI.WinForms.BunifuSnackbar.SnackbarResult})">
            <summary>
            Lets you to check the result returned by the 
            Snackbar once it is closed. You can also use 
            this to execute any specific action based on 
            the result provided.
            </summary>
            <param name="result">
            The result returned by the Snackbar.
            </param>
            <param name="action">
            The action to be performed either 
            anonymously or as per a specific result.
            </param>
        </member>
    </members>
</doc>
