<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bunifu.UI.WinForms.BunifuSlider</name>
    </assembly>
    <members>
        <member name="T:Bunifu.UI.WinForms.BunifuVSlider">
            <summary>
            Provides enhanced vertical ranged value 
            selections and extra customization options.
            </summary>
            <seealso cref="T:System.Windows.Forms.UserControl" />
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuVSlider.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Bunifu.UI.WinForms.BunifuVSlider"/> control.
            </summary>
        </member>
        <member name="T:Bunifu.UI.WinForms.BunifuVSlider.DirectionalMovements">
            <summary>
            Provides directional options that the vertical
            slider can adjust to whenever movement occurs.
            </summary>      
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuVSlider.DirectionalMovements.TopDown">
            <summary>
            Adjusts movement from top to bottom.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuVSlider.DirectionalMovements.BottomUp">
            <summary>
            Adjusts movement from bottom to top.
            </summary>
        </member>
        <member name="T:Bunifu.UI.WinForms.BunifuVSlider.ThumbStyles">
            <summary>
            Provides options for choosing the thumb's overall style.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuVSlider.ThumbStyles.Fill">
            <summary>
            In fill mode, the thumb will have a fill color 
            as provided by the 'ThumbColor' property.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Bunifu.UI.WinForms.BunifuVSlider.ThumbStyles.Outline" -->
        <member name="T:Bunifu.UI.WinForms.BunifuVSlider.ThumbSizes">
            <summary>
            Provides default thumb size options.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuVSlider.ThumbSizes.Small">
            <summary>
            Represents a small thumb.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuVSlider.ThumbSizes.Medium">
            <summary>
            Represents a medium-sized thumb.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuVSlider.ThumbSizes.Large">
            <summary>
            Represents a large thumb.
            </summary>
        </member>
        <member name="T:Bunifu.UI.WinForms.BunifuVSlider.SliderStyles">
            <summary>
            Provides options for choosing the slider's overall style.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuVSlider.SliderStyles.Thick">
            <summary>
            Applies a thick border to the slider.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Bunifu.UI.WinForms.BunifuVSlider.SliderStyles.Thin" -->
        <member name="P:Bunifu.UI.WinForms.BunifuVSlider.ScrollDirection">
            <summary>
            Gets or sets the directional movement of the slider.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuVSlider.SliderColor">
            <summary>
            Gets or sets the slider's BackColor.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuVSlider.ElapsedColor">
            <summary>
            Gets or sets the slider's elapsed region color.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuVSlider.ThumbFillColor">
            <summary>
            Gets or sets the thumb's inner fill color. 
            This is only necessary when the property 
            'ThumbStyle' is set to 'Outline'.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuVSlider.ThumbStyle">
            <summary>
            Gets or sets the slider's thumb style.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuVSlider.SliderStyle">
            <summary>
            Gets or sets the slider's overral style.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuVSlider.OnDisableSlider">
            <summary>
            Represents the disabled or inactive state of the control.
            </summary>
        </member>
        <member name="T:Bunifu.UI.WinForms.BunifuVSlider.BunifuVSliderActionList">
            <summary>
            Initializes a new instance of the <see cref="T:Bunifu.UI.WinForms.BunifuVSlider.BunifuVSliderActionList"/> class.
            </summary>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuVSlider.BunifuVSliderActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="T:Bunifu.UI.WinForms.BunifuVSlider.SliderState">
            <summary>
            An abstract class used to define various states within Bunifu Sliders.
            </summary>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuVSlider.SliderState.#ctor(System.String)">
            <summary>
            Creates a new Bunifu Slider state.
            </summary>
            <param name="name">
            Provide a name for the state. 
            This can be used to track the state once initialized.
            </param>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuVSlider.SliderState.Name">
            <summary>
            Gets the name applied to the state.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuVSlider.SliderState.SliderColor">
            <summary>
             Gets or sets the background color of the Slider.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuVSlider.SliderState.ElapsedColor">
            <summary>
             Gets or sets the slider's elapsed region color.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuVSlider.SliderState.ThumbColor">
            <summary>
             Gets or sets the background color of the thumb.
            </summary>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuVSlider.SliderState.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing the values passed to the state separated by semi-colons.
            The order of appearance is: <see cref="P:Bunifu.UI.WinForms.BunifuVSlider.SliderState.SliderColor"/>, <see cref="P:Bunifu.UI.WinForms.BunifuVSlider.SliderState.ElapsedColor"/>, <see cref="P:Bunifu.UI.WinForms.BunifuVSlider.SliderState.ThumbColor"/>, 
            <see cref="P:Bunifu.UI.WinForms.BunifuVSlider.SliderState.ThumbColor"/>.
            </summary>
            <returns>String</returns>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuVSlider.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuVSlider.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuVSlider.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Bunifu.UI.WinForms.BunifuHSlider">
            <summary>
            Provides enhanced horizontal ranged value 
            selections and extra customization options.
            </summary>
            <seealso cref="T:System.Windows.Forms.UserControl" />
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuHSlider.#ctor">
            <summary>
            Creates a new <see cref="T:Bunifu.UI.WinForms.BunifuHSlider"/> control.
            </summary>
        </member>
        <member name="T:Bunifu.UI.WinForms.BunifuHSlider.ThumbStyles">
            <summary>
            Provides options for choosing the thumb's overall style.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuHSlider.ThumbStyles.Fill">
            <summary>
            In fill mode, the thumb will have a fill color 
            as provided by the 'ThumbColor' property.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Bunifu.UI.WinForms.BunifuHSlider.ThumbStyles.Outline" -->
        <member name="T:Bunifu.UI.WinForms.BunifuHSlider.SliderStyles">
            <summary>
            Provides options for choosing the slider's overall style.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuHSlider.SliderStyles.Thick">
            <summary>
            Applies a thick border to the slider.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Bunifu.UI.WinForms.BunifuHSlider.SliderStyles.Thin" -->
        <member name="T:Bunifu.UI.WinForms.BunifuHSlider.ThumbSizes">
            <summary>
            Provides default thumb size options.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuHSlider.ThumbSizes.Small">
            <summary>
            Represents a small thumb.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuHSlider.ThumbSizes.Medium">
            <summary>
            Represents a medium-sized thumb.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuHSlider.ThumbSizes.Large">
            <summary>
            Represents a large thumb.
            </summary>
        </member>
        <member name="T:Bunifu.UI.WinForms.BunifuHSlider.SliderStates">
            <summary>
            Defines various states in a Slider's activity cycle.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuHSlider.SliderStates.Idle">
            <summary>
            Denotes the Slider's idle state.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuHSlider.SliderStates.Hover">
            <summary>
            Denotes the Slider's mouse-hover state.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuHSlider.SliderStates.Pressed">
            <summary>
            Denotes the Slider's mouse-press or click state.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuHSlider.IndicateFocus">
            <summary>
            Gets or sets a value indicating whether the 
            control will provide a visual cue when focused.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuHSlider.AnimationSpeed">
            <summary>
            Gets or sets the Slider's animation speed (in milliseconds) 
            when moving from one state to another.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuHSlider.SliderColor">
            <summary>
            Gets or sets the slider's BackColor.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuHSlider.ElapsedColor">
            <summary>
            Gets or sets the slider's elapsed region color.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuHSlider.ThumbFillColor">
            <summary>
            Gets or sets the thumb's inner fill color. 
            This is only necessary when the property 
            'ThumbStyle' is set to 'Outline'.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuHSlider.ThumbStyle">
            <summary>
            Gets or sets the slider's thumb style.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuHSlider.SliderStyle">
            <summary>
            Gets or sets the slider's overral style.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuHSlider.FocusState">
            <summary>
            Gets or sets the state to use when the Slider 
            contains focus while the cursor is away.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuHSlider.OnIdleState">
            <summary>
            Represents the idle state of the control.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuHSlider.OnDisabledState">
            <summary>
            Represents the disabled or inactive state of the control.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuHSlider.OnHoverState">
            <summary>
            Represents the mouse hover state of the control.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuHSlider.OnPressedState">
            <summary>
            Represents the mouse pressed or click state of the control.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuHSlider.OnDisableSlider">
            <summary>
            Represents the disabled or inactive state of the control.
            </summary>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuHSlider.ResetAnimations">
            <summary>
            Resets the control's state animations.
            </summary>
        </member>
        <member name="T:Bunifu.UI.WinForms.BunifuHSlider.BunifuHSliderActionList">
            <summary>
            Initializes a new instance of the <see cref="T:Bunifu.UI.WinForms.BunifuHSlider.BunifuHSliderActionList"/> class.
            </summary>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuHSlider.BunifuHSliderActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="T:Bunifu.UI.WinForms.BunifuHSlider.SliderState">
            <summary>
            An abstract class used to define various states within Bunifu Sliders.
            </summary>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuHSlider.SliderState.#ctor(System.String)">
            <summary>
            Creates a new Bunifu Slider state.
            </summary>
            <param name="name">
            Provide a name for the state. 
            This can be used to track the state once initialized.
            </param>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuHSlider.SliderState.Name">
            <summary>
            Gets the name applied to the state.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuHSlider.SliderState.SliderColor">
            <summary>
             Gets or sets the background color of the Slider.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuHSlider.SliderState.ElapsedColor">
            <summary>
             Gets or sets the slider's elapsed region color.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuHSlider.SliderState.ThumbColor">
            <summary>
             Gets or sets the background color of the thumb.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.BunifuHSlider.SliderState.ThumbFillColor">
            <summary>
            Gets or sets the thumb's inner fill color. 
            This is only necessary when the property 
            'ThumbStyle' is set to 'Outline'.
            </summary>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuHSlider.SliderState.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing the values passed to the state separated by semi-colons.
            The order of appearance is: <see cref="P:Bunifu.UI.WinForms.BunifuHSlider.SliderState.SliderColor"/>, <see cref="P:Bunifu.UI.WinForms.BunifuHSlider.SliderState.ElapsedColor"/>, <see cref="P:Bunifu.UI.WinForms.BunifuHSlider.SliderState.ThumbColor"/>, 
            <see cref="P:Bunifu.UI.WinForms.BunifuHSlider.SliderState.ThumbColor"/>.
            </summary>
            <returns>String</returns>
        </member>
        <member name="F:Bunifu.UI.WinForms.BunifuHSlider.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuHSlider.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Bunifu.UI.WinForms.BunifuHSlider.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuHScrollBar">
            <summary>
            Provides enhanced vertical content-scrolling capabilities and extended customization options at design time.
            </summary>
            <seealso cref="T:System.Windows.Forms.UserControl" />
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Utilities.BunifuSlider.BunifuHScrollBar"/> control class.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuHScrollBar.ArrowType">
            <summary>
            Provides a list of arrow-types for rendering in the ScrollBar.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuHScrollBar.ArrowType.TopArrow">
            <summary>
            Specifies the Up or Top arrow.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuHScrollBar.ArrowType.BottomArrow">
            <summary>
            Specifies the Down or Bottom arrow.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuHScrollBar.ArrowStyle">
            <summary>
            Provides a list of arrow-styles for rendering in the ScrollBar.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuHScrollBar.ArrowStyle.Line">
            <summary>
            Specifies a line-style arrow.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuHScrollBar.ArrowStyle.Fill">
            <summary>
            Specifies a fill-style arrow.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuHScrollBar.EffectType">
            <summary>
            Provides a set of states that can be specified for the control's mouse-effect transitions.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuHScrollBar.EffectType.OnEnter">
            <summary>
            Specifies the MouseEnter event-state effect.
            Note: The "MouseHover" event is called each time 
            scrolling occurs and thus is not advisable to use.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuHScrollBar.EffectType.OnPress">
            <summary>
            Specifies the MouseDown event-state effect.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuHScrollBar.EffectType.OnLeave">
            <summary>
            Specifies the MouseLeave event-state effect.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuHScrollBar.ThumbStyles">
            <summary>
            Provides options for choosing the thumb's style within the ScrollBar.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuHScrollBar.ThumbStyles.Inset">
            <summary>
            Adjusts the thumb's position to appear within the ScrollBar.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuHScrollBar.ThumbStyles.Proportional">
            <summary>
            Adjusts the thumb's position to appear in the same size as the ScrollBar.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuHScrollBar.Direction">
            <summary>
            Provides a list of the thumb's directional movements within the ScrollBar.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuHScrollBar.Direction.Left">
            <summary>
            Returns if the thumb is moving towards the left of the ScrollBar.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuHScrollBar.Direction.Right">
            <summary>
            Returns if the thumb is moving towards the right of the ScrollBar.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuHScrollBar.Direction.InCursor">
            <summary>
            Returns if the thumb is has reached the cursor's current position.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuHScrollBar.ScrollBarVisualStyles">
            <summary>
            Provides visual style options for customizing the 
            look and feel of the ScrollBar.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuHScrollBar.ScrollBarVisualStyles.ScrollBar">
            <summary>
            Switches the ScrollBar to its default style.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuHScrollBar.ScrollBarVisualStyles.Slider">
            <summary>
            Switches the ScrollBar to visually mimic a slider.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuHScrollBar.DrawModes">
            <summary>
            Provides rendering options used whenever elements
            are being drawn within a control's surface.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuHScrollBar.DrawModes.Fill">
            <summary>
            Draws an element filling its entire
            surface with its primary color.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuHScrollBar.DrawModes.Outline">
            <summary>
            Draws an element in outline form, 
            leaving its inner surface either 
            color-filled or transparent.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuHScrollBar.SliderThumbStyles">
            <summary>
            Provides styling options for the slider's thumb.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuHScrollBar.SliderThumbStyles.Thin">
            <summary>
            Renders a thin or stick-like thumb.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuHScrollBar.SliderThumbStyles.Circular">
            <summary>
            Renders a circular thumb.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.OnDisable">
            <summary>
            Represents the disabled or inactive state of the control.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.BindingContainer">
            <summary>
            Gets or sets the container-control attached with the ScrollBar.
            The container control needs to be a <see cref="T:System.Windows.Forms.ScrollableControl"/> 
            or a <see cref="T:System.Windows.Forms.DataGridView"/> for it to be attached.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.Value">
            <summary>
            Gets or sets the thumb's value or position in the ScrollBar.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> exception is thrown when the value set is outside appropriate range, that is, between the Minimum and Maximum set values.</exception>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.Maximum">
            <summary>
            Gets or sets the ScrollBar's minimum scrollable range.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> exception is thrown when the Minimum property value is greater than the Maximum property value.</exception>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.Minimum">
            <summary>
            Gets or sets the ScrollBar's maximum scrollable range.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> exception is thrown when the Maximum property value is greater than the Minimum property value.</exception>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.SmallChange">
            <summary>
            Gets or sets the amount by which the thumb's value changes when the user presses an arrow key.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.LargeChange">
            <summary>
             Gets or sets the amount by which the thumb's value changes when the user clicks in the scroll bar or presses the PageUp or PageDown keys.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.BorderRadius">
            <summary>
            [Reserved] Gets or sets the border-radius of the ScrollBar and the thumb.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.BorderThickness">
            <summary>
            Gets or sets the border-thickness of the ScrollBar.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.ThumbStyle">
            <summary>
             Gets or sets the thumb's style in relation to the ScrollBar.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.ThumbLength">
            <summary>
            Gets or sets the length of the ScrollBar's thumb.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.ThumbMargin">
            <summary>
            Gets or sets the distance between the thumb and the ScrollBar's edges.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.MinimumThumbLength">
            <summary>
            Gets or sets the minimum length of the ScrollBar's thumb.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.DurationBeforeShrink">
            <summary>
            Gets or sets the duration the ScrollBar will wait before it shrinks back when inactive.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.ShrinkSizeLimit">
            <summary>
            Gets or sets the shrink-size limit of the ScrollBar when focus is lost.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.AllowShrinkingOnFocusLost">
            <summary>
            Gets or sets a value indicating whether the ScrollBar will automatically shrink when focus is lost.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.AllowCursorChanges">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow changes to the cursor during the thumb's movement.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.AllowScrollOptionsMenu">
            <summary>
            Gets or sets a value indicating whether the ScrollBar will allow displaying of the scroll options menu on right-clicking it.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.AllowScrollKeysDetection">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow detection of the standard scroll navigation keys 
             which include the Up/Down arrow keys and the Page-up/Page-down keys.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.AllowScrollingAnimations">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow animations whenever the thumb is moved.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.AllowHomeEndKeysDetection">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow detection of the Home/End special navigation keys.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.AllowIncrementalClickMoves">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow incremental 
             thumb movements whenever the scrolling region is clicked at any one point.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.AllowMouseDownEffects">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow mouse-down effects when active.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.AllowMouseHoverEffects">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow mouse-hover effects when active.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.ScrollOptionsMenuVisible">
            <summary>
            Gets a value indicating whether the ScrollBar's options menu is currently visible.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.ScrollBarColor">
            <summary>
             Gets or sets the background color of the ScrollBar.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.ScrollBarBorderColor">
            <summary>
             Gets or sets the border color of the ScrollBar.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.ThumbColor">
            <summary>
             Gets or sets the background color of the thumb.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.ThumbSize">
            <summary>
            Gets or sets the default thumb size.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.Orientation">
            <summary>
            Gets the orientation of the ScrollBar.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.ScrollBarRectangle">
            <summary>
            Gets the ScrollBar's enclosing rectangle.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.CreateParams">
            <summary>
            Overrides the CreateParams method to stop flickering issues 
            by setting the "WS_EX_COMPOSITED" (0x02000000) style.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.VisualStyle">
            <summary>
            Gets or sets a preset visual style to be applied in the ScrollBar.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.SliderThumbStyle">
            <summary>
            Gets or sets a style for the slider's thumb.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.ThumbBorderThickness">
            <summary>
            Gets or sets the thumb's border thickness.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.ThumbFillColor">
            <summary>
            Gets or sets the thumb's inner fill color.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.ThumbDrawMode">
            <summary>
            Gets or sets the thumb's default draw-mode.
            </summary>
        </member>
        <member name="E:Utilities.BunifuSlider.BunifuHScrollBar.ValueChanged">
            <summary>
            Occurs whenever the Value property has been changed.
            </summary>
        </member>
        <member name="E:Utilities.BunifuSlider.BunifuHScrollBar.Scroll">
            <summary>
            Occurs whenever the Scroll event has been raised.
            </summary>
        </member>
        <member name="E:Utilities.BunifuSlider.BunifuHScrollBar.MouseCaptureChanged">
            <summary>
            Occurs after the mouse capture is changed.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuHScrollBar.ValueChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:Utilities.BunifuSlider.BunifuHScrollBar.ValueChanged"/> event.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.ValueChangedEventArgs.#ctor(System.Int32)">
            <summary>
            Provides data for the <see cref="E:Utilities.BunifuSlider.BunifuHScrollBar.ValueChanged"/> event.
            </summary>
            <param name="value">The newly set ScrollBar value.</param>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.ValueChangedEventArgs.Value">
            <summary>
            Gets the new ScrollBar value.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuHScrollBar.MouseCaptureChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:Utilities.BunifuSlider.BunifuHScrollBar.MouseCaptureChanged"/> event.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.MouseCaptureChangedEventArgs.#ctor(System.Int32,Utilities.BunifuSlider.BunifuHScrollBar.Direction)">
            <summary>
            Provides data for the <see cref="E:Utilities.BunifuSlider.BunifuHScrollBar.MouseCaptureChanged"/> event.
            </summary>
            <param name="value">The newly set ScrollBar value.</param>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.MouseCaptureChangedEventArgs.Value">
            <summary>
            Gets the new ScrollBar value.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.MouseCaptureChangedEventArgs.ThumbDirection">
            <summary>
            Gets the thumb's directional movement.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuHScrollBar.ScrollEventArgs">
            <summary>
            Provides data for the <see cref="E:Utilities.BunifuSlider.BunifuHScrollBar.Scroll"/> event.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.ScrollEventArgs.#ctor(System.Int32)">
            <summary>
            Provides data for the <see cref="!:BunifuHScrollBar.ScrollChanged"/> event.
            </summary>
            <param name="value">The newly set ScrollBar value.</param>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.ScrollEventArgs.Value">
            <summary>
            Gets the new ScrollBar value.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Allows for the processing of the assigned movement keys to the ScrollBar when active.
            </summary>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.Refresh">
            <summary>
            Redraws the control's surface.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.BindTo(System.Windows.Forms.Control)">
            <summary>
            Binds or attaches the ScrollBar to the scroll events of any
            <see cref="T:System.Windows.Forms.ScrollableControl"/> or <see cref="T:System.Windows.Forms.DataGridView"/>.
            </summary>
            <param name="control">
            The <see cref="T:System.Windows.Forms.ScrollableControl"/> or <see cref="T:System.Windows.Forms.DataGridView"/> 
            to attach to.
            </param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.BindTo(System.Windows.Forms.ScrollableControl)">
            <summary>
            Binds or attaches the ScrollBar to the scroll events of any
            <see cref="T:System.Windows.Forms.ScrollableControl"/>.
            </summary>
            <param name="control">
            The <see cref="T:System.Windows.Forms.ScrollableControl"/> to attach to.
            </param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.BindTo(System.Windows.Forms.DataGridView,System.Boolean)">
            <summary>
            Binds or attaches the ScrollBar to the scroll events of any
            <see cref="T:System.Windows.Forms.DataGridView"/>.
            </summary>
            <param name="dataGridView">
            The <see cref="T:System.Windows.Forms.DataGridView"/> to attach to.
            </param>
            <param name="allowSelection">
            Allow cell-selections when scrolling?
            </param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.DrawScrollBar">
            <summary>
            Draws the ScrollBar.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.DrawThumb(System.Drawing.Graphics@,System.Drawing.Pen,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Draws the ScrollBar's thumb.
            </summary>
            <param name="graphics">The Graphics canvas.</param>
            <param name="thumbPen">The pen used to draw the thumb.</param>
            <param name="controlRectangle">The rectangle surface on which to draw the graphics.</param>
            <param name="thickness">The thickness of the thumb.</param>
            <param name="height">The thumb's height.</param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.DrawTopArrow(System.Drawing.Graphics@,System.Drawing.Pen,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Draws the ScrollBar's top arrow.
            </summary>
            <param name="graphics">The Graphics canvas.</param>
            <param name="arrowPen">The pen used to draw the arrow.</param>
            <param name="controlRectangle">The rectangle surface on which to draw the graphics.</param>
            <param name="thickness">The thickness of the arrow.</param>
            <param name="height">The arrow's height.</param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.DrawArrow(System.Drawing.Graphics,System.Drawing.Rectangle,Utilities.BunifuSlider.BunifuHScrollBar.ArrowType,Utilities.BunifuSlider.BunifuHScrollBar.ArrowStyle,System.Drawing.Color)">
            <summary>
            Draws the ScrollBar's arrows.
            </summary>
            <param name="g">The Graphics object.</param>
            <param name="controlRectangle">The rectangle surface on which to draw the graphics.</param>
            <param name="type">The type of arrow to be drawn.</param>
            <param name="style">The style of arrow to be rendered.</param>
            <param name="arrowColor">The arrow color to apply.</param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.DrawArrow(System.Drawing.Graphics@,System.Drawing.Pen,Utilities.BunifuSlider.BunifuHScrollBar.ArrowType,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws the ScrollBar's arrows.
            </summary>
            <param name = "graphics" > The Graphics canvas.</param>
            <param name = "arrowPen" > The pen used to draw the graphics surface.</param>
            <param name = "type" > The type of arrow to be drawn - either top or bottom.</param>
            <param name = "controlRectangle" > The rectangle surface on which to draw the graphics.</param>
            <param name = "thickness" > The thickness of the arrow.</param>
            <param name = "width" > The arrow's width.</param>
            <param name = "height" > The arrow's height.</param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.DrawRoundedRectangle(System.Drawing.RectangleF,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Draws a rectangle in the indicated Rectangle rounding the indicated corners.
            </summary>
            <param name="rect"></param>
            <param name="xradius"></param>
            <param name="yradius"></param>
            <param name="round_ul"></param>
            <param name="round_ur"></param>
            <param name="round_lr"></param>
            <param name="round_ll"></param>
            <returns></returns>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.DrawLayout(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Creates the control's container layout.
            </summary>
            <param name="graphics">The Graphics canvas.</param>
            <param name="Bounds">The canvas rectangle-bounds.</param>
            <param name="radius">The canvas corner-radius.</param>
            <param name="pen">The pen used to draw objects inside the canvas.</param>
            <param name="backColor">The layout's background color.</param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.HandleMouseCapture(System.Boolean)">
            <summary>
            Handles mouse-capture events in the ScrollBar.
            </summary>
            <param name="isInTimerMode">Prevents attaching multiple events when moving the thumb through the Timer when set to "true".</param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.BindToContainerControl">
            <summary>
            Automatically binds the attached container-control
            or DataGridView at runtime.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.IsControlScrollBindable(System.Windows.Forms.Control)">
            <summary>
            Determines if a certain control can 
            be bound-up with Bunifu Scrollbars.
            </summary>
            <param name="control">The control to determine.</param>
            <returns>True if scroll-bindable, or False if not scroll-bindable.</returns>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.IsInDesignMode">
            <summary>
            Determines whether the hosting process is in design-mode.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.DebugString(System.String)">
            <summary>
            Allows you to view the value of a parameter or object value from the parent form's "Text" caption.
            </summary>
            <param name="value">The value (in <see cref="T:System.String"/> format) to be printed.</param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.BeginThumbMovement(System.Int32)">
            <summary>
            Begins moving the thumb using the Timer from the "MouseDown" event.
            </summary>
            <param name="movementIntervals">The timer intervals to skip before the thumb moves again.</param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.EndThumbMovement">
            <summary>
            Resets the duration set and then ends the thumb's movement in the 
            Timer from the "MouseUp" event.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.AutoGrowScrollBar">
            <summary>
            Adjusts the ScrollBar's size when inactive. 
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.AutoShrinkScrollBar">
            <summary>
            Adjusts the ScrollBar's size when active. 
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.Shrink(System.Object)">
            <summary>
            [Asynchronous] Called by the method <see cref="M:Utilities.BunifuSlider.BunifuHScrollBar.AutoShrinkScrollBar"/> to shrink the ScrollBar.
            </summary>
            <param name="stateInfo">May be used to represent the state of the ScrollBar.</param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.MoveThumb(System.Int32,System.Boolean)">
            <summary>
            Moves the thumb to a specified position.
            </summary>
            <param name="to">The new thumb's position.</param>
            <param name="allowTransition">Enable/disable the thumb's transition.
            Disabling the animation is important when handling on-demand thumb-change scenarios.
            </param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.MoveValue(System.Int32)">
            <summary>
            Moves any value to a newly specified position.
            </summary>
            <param name="to">The new value.</param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.PerformMouseEffect(Utilities.BunifuSlider.BunifuHScrollBar.EffectType)">
            <summary>
            Performs a directed mouse effect to the control.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.SetThumbLength">
            <summary>
            Sets the appropriate length of the thumb.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.SetScrollBounds">
            <summary>
            Applies the standard scroll values responsible for setting the bounds of the ScrollBar.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.IsPointInRect(System.Drawing.Point,System.Drawing.Rectangle)">
            <summary>
            Determines whether rectangle contains given point.
            </summary>
            <param name="pt">The point to test.</param>
            <param name="rect">The base rectangle.</param>
            <returns>
            	<c>true</c> if rectangle contains given point; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.IsMouseInThumb(System.Boolean)">
            <summary>
            Determines whether the mouse in within the thumb's region.
            </summary>
            <param name="applyUniqueCheck">Applies a unique check whereby anywhere within the thumb's region is used instead of the thumb's rectangle region.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.IsMouseInScrollBar">
            <summary>
            Determines whether the mouse in within the thumb's region.
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.ConvertRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts the ScrollBar's size dimensions to the user-specified range dimensions.
            </summary>
            <param name="originalStart">The original starting point.</param>
            <param name="originalEnd">The original ending point.</param>
            <param name="newStart">The new starting point in the user-specified range.</param>
            <param name="newEnd">The new ending point in the user-specified range.</param>
            <param name="value">The value to be set within the range.</param>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuHScrollBar.BunifuHScrollBarActionList">
            <summary>
            Initializes a new instance of the <see cref="T:Utilities.BunifuSlider.BunifuHScrollBar.BunifuHScrollBarActionList"/> class.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.BunifuHScrollBarActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuHScrollBar.ScrollBarState">
            <summary>
            An abstract class used to define various states within Bunifu ScrollBars.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.ScrollBarState.#ctor(System.String)">
            <summary>
            Creates a new Bunifu ScrollBar state.
            </summary>
            <param name="name">Provide a name for the state. This can be used to track the state once initialized.</param>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.ScrollBarState.Name">
            <summary>
            Gets the name applied to the state.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.ScrollBarState.ScrollBarColor">
            <summary>
             Gets or sets the background color of the ScrollBar.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.ScrollBarState.ScrollBarBorderColor">
            <summary>
             Gets or sets the border color of the ScrollBar.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuHScrollBar.ScrollBarState.ThumbColor">
            <summary>
             Gets or sets the background color of the thumb.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.ScrollBarState.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing the values passed to the state separated by semi-colons.
            The order of appearance is: <see cref="P:Utilities.BunifuSlider.BunifuHScrollBar.ScrollBarState.ScrollBarBorderColor"/>, <see cref="P:Utilities.BunifuSlider.BunifuHScrollBar.ScrollBarState.ScrollBarColor"/>, 
            <see cref="P:Utilities.BunifuSlider.BunifuHScrollBar.ScrollBarState.ThumbColor"/>.
            </summary>
            <returns>String</returns>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuHScrollBar.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuHScrollBar.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuVScrollBar">
            <summary>
            Provides enhanced vertical content-scrolling capabilities and extended customization options at design time.
            </summary>
            <seealso cref="T:System.Windows.Forms.UserControl" />
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Utilities.BunifuSlider.BunifuVScrollBar"/> control class.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuVScrollBar.DirectionalMovements">
            <summary>
            Provides directional options that the vertical
            ScrollBar can adjust to whenever movement occurs.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuVScrollBar.DirectionalMovements.TopDown">
            <summary>
            Adjusts movement from top to bottom.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuVScrollBar.DirectionalMovements.BottomUp">
            <summary>
            Adjusts movement from bottom to top.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuVScrollBar.ArrowType">
            <summary>
            Provides a list of arrow-types for rendering in the ScrollBar.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuVScrollBar.ArrowType.TopArrow">
            <summary>
            Specifies the Up or Top arrow.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuVScrollBar.ArrowType.BottomArrow">
            <summary>
            Specifies the Down or Bottom arrow.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuVScrollBar.ArrowStyle">
            <summary>
            Provides a list of arrow-styles for rendering in the ScrollBar.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuVScrollBar.ArrowStyle.Line">
            <summary>
            Specifies a line-style arrow.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuVScrollBar.ArrowStyle.Fill">
            <summary>
            Specifies a fill-style arrow.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuVScrollBar.EffectType">
            <summary>
            Provides a set of states that can be specified for the control's mouse-effect transitions.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuVScrollBar.EffectType.OnEnter">
            <summary>
            Specifies the MouseEnter event-state effect.
            Note: The "MouseHover" event is called each time 
            scrolling occurs and thus is not advisable to use.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuVScrollBar.EffectType.OnPress">
            <summary>
            Specifies the MouseDown event-state effect.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuVScrollBar.EffectType.OnLeave">
            <summary>
            Specifies the MouseLeave event-state effect.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuVScrollBar.ThumbStyles">
            <summary>
            Provides options for choosing the thumb's style within the ScrollBar.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuVScrollBar.ThumbStyles.Inset">
            <summary>
            Adjusts the thumb's position to appear within the ScrollBar.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuVScrollBar.ThumbStyles.Proportional">
            <summary>
            Adjusts the thumb's position to appear in the same size as the ScrollBar.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuVScrollBar.Direction">
            <summary>
            Provides a list of the thumb's directional movements within the ScrollBar.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuVScrollBar.Direction.Top">
            <summary>
            Returns if the thumb is moving towards the top of the ScrollBar.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuVScrollBar.Direction.Bottom">
            <summary>
            Returns if the thumb is moving towards the bottom of the ScrollBar.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuVScrollBar.Direction.InCursor">
            <summary>
            Returns if the thumb is has reached the cursor's current position.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuVScrollBar.ScrollBarVisualStyles">
            <summary>
            Provides visual style options for customizing the 
            look and feel of the ScrollBar.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuVScrollBar.ScrollBarVisualStyles.ScrollBar">
            <summary>
            Switches the ScrollBar to its default style.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuVScrollBar.ScrollBarVisualStyles.Slider">
            <summary>
            Switches the ScrollBar to visually mimic a slider.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuVScrollBar.DrawModes">
            <summary>
            Provides rendering options used whenever elements
            are being drawn within a control's surface.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuVScrollBar.DrawModes.Fill">
            <summary>
            Draws an element filling its entire
            surface with its primary color.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuVScrollBar.DrawModes.Outline">
            <summary>
            Draws an element in outline form, 
            leaving its inner surface either 
            color-filled or transparent.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuVScrollBar.SliderThumbStyles">
            <summary>
            Provides styling options for the slider's thumb.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuVScrollBar.SliderThumbStyles.Thin">
            <summary>
            Renders a thin or stick-like thumb.
            </summary>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuVScrollBar.SliderThumbStyles.Circular">
            <summary>
            Renders a circular thumb.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.DirectionalScroll">
            <summary>
            Gets or sets the directional movement of the ScrollBar.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.OnDisable">
            <summary>
            Represents the disabled or inactive state of the control.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.BindingContainer">
            <summary>
            Gets or sets the container-control attached with the ScrollBar.
            The container control needs to be a <see cref="T:System.Windows.Forms.ScrollableControl"/> 
            or a <see cref="T:System.Windows.Forms.DataGridView"/> for it to be attached.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.Value">
            <summary>
            Gets or sets the thumb's value or position in the ScrollBar.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> exception is thrown when the value set is outside appropriate range, that is, between the Minimum and Maximum set values.</exception>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.Maximum">
            <summary>
            Gets or sets the ScrollBar's minimum scrollable range.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> exception is thrown when the Minimum property value is greater than the Maximum property value.</exception>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.Minimum">
            <summary>
            Gets or sets the ScrollBar's maximum scrollable range.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> exception is thrown when the Maximum property value is greater than the Minimum property value.</exception>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.SmallChange">
            <summary>
            Gets or sets the amount by which the thumb's value changes when the user presses an arrow key.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.LargeChange">
            <summary>
             Gets or sets the amount by which the thumb's value changes when the user clicks in the scroll bar or presses the PageUp or PageDown keys..
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.BorderRadius">
            <summary>
            [Experimental] Gets or sets the border-radius of the ScrollBar and the thumb.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.BorderThickness">
            <summary>
            Gets or sets the border-thickness of the ScrollBar.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.ThumbStyle">
            <summary>
             Gets or sets the thumb's style in relation to the ScrollBar.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.ThumbLength">
            <summary>
            Gets or sets the length of the ScrollBar's thumb.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.ThumbMargin">
            <summary>
            Gets or sets the distance between the thumb and the ScrollBar's edges.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.MinimumThumbLength">
            <summary>
            Gets or sets the minimum length of the ScrollBar's thumb.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.DurationBeforeShrink">
            <summary>
            Gets or sets the duration the ScrollBar will wait before it shrinks back when focus is lost.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.ShrinkSizeLimit">
            <summary>
            Gets or sets the shrink-size limit of the ScrollBar when focus is lost.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.AllowShrinkingOnFocusLost">
            <summary>
            Gets or sets a value indicating whether the ScrollBar will automatically shrink when focus is lost.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.AllowCursorChanges">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow changes to the cursor during the thumb's movement.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.AllowScrollOptionsMenu">
            <summary>
            Gets or sets a value indicating whether the ScrollBar will allow displaying of the scroll options menu on right-clicking it.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.AllowScrollKeysDetection">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow detection of the standard scroll navigation keys 
             which include the Up/Down arrow keys and the Page-up/Page-down keys.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.AllowScrollingAnimations">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow animations whenever the thumb is moved.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.AllowHomeEndKeysDetection">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow detection of the Home/End special navigation keys.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.AllowIncrementalClickMoves">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow incremental 
             thumb movements whenever the scrolling region is clicked at any one point.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.AllowMouseDownEffects">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow mouse-down effects when active.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.AllowMouseHoverEffects">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow mouse-hover effects when active.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.ScrollOptionsMenuVisible">
            <summary>
            Gets a value indicating whether the ScrollBar's options menu is currently visible.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.ScrollBarColor">
            <summary>
             Gets or sets the background color of the ScrollBar.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.ScrollBarBorderColor">
            <summary>
             Gets or sets the border color of the ScrollBar.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.ThumbColor">
            <summary>
             Gets or sets the background color of the thumb.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.ThumbSize">
            <summary>
            Gets or sets the default thumb size.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.Orientation">
            <summary>
            Gets the orientation of the ScrollBar.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.ScrollBarRectangle">
            <summary>
            Gets the ScrollBar's enclosing rectangle.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.CreateParams">
            <summary>
            Overrides the CreateParams method to stop flickering issues 
            by setting the "WS_EX_COMPOSITED" (0x02000000) style.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.VisualStyle">
            <summary>
            Gets or sets a preset visual style to be applied in the ScrollBar.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.SliderThumbStyle">
            <summary>
            Gets or sets a style for the slider's thumb.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.ThumbBorderThickness">
            <summary>
            Gets or sets the thumb's border thickness.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.ThumbFillColor">
            <summary>
            Gets or sets the thumb's inner fill color.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.ThumbDrawMode">
            <summary>
            Gets or sets the thumb's default draw-mode.
            </summary>
        </member>
        <member name="E:Utilities.BunifuSlider.BunifuVScrollBar.ValueChanged">
            <summary>
            Occurs whenever the Value property has been changed.
            </summary>
        </member>
        <member name="E:Utilities.BunifuSlider.BunifuVScrollBar.Scroll">
            <summary>
            Occurs whenever the Scroll event has been raised.
            </summary>
        </member>
        <member name="E:Utilities.BunifuSlider.BunifuVScrollBar.MouseCaptureChanged">
            <summary>
            Occurs after the mouse capture is changed.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuVScrollBar.ValueChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:Utilities.BunifuSlider.BunifuVScrollBar.ValueChanged"/> event.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.ValueChangedEventArgs.#ctor(System.Int32)">
            <summary>
            Provides data for the <see cref="E:Utilities.BunifuSlider.BunifuVScrollBar.ValueChanged"/> event.
            </summary>
            <param name="value">The newly set ScrollBar value.</param>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.ValueChangedEventArgs.Value">
            <summary>
            Gets the new ScrollBar value.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuVScrollBar.MouseCaptureChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:Utilities.BunifuSlider.BunifuVScrollBar.MouseCaptureChanged"/> event.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.MouseCaptureChangedEventArgs.#ctor(System.Int32,Utilities.BunifuSlider.BunifuVScrollBar.Direction)">
            <summary>
            Provides data for the <see cref="E:Utilities.BunifuSlider.BunifuVScrollBar.MouseCaptureChanged"/> event.
            </summary>
            <param name="value">The newly set ScrollBar value.</param>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.MouseCaptureChangedEventArgs.Value">
            <summary>
            Gets the new ScrollBar value.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.MouseCaptureChangedEventArgs.ThumbDirection">
            <summary>
            Gets the thumb's directional movement.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuVScrollBar.ScrollEventArgs">
            <summary>
            Provides data for the <see cref="E:Utilities.BunifuSlider.BunifuVScrollBar.Scroll"/> event.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.ScrollEventArgs.#ctor(System.Int32)">
            <summary>
            Provides data for the <see cref="!:BunifuVScrollBar.ScrollChanged"/> event.
            </summary>
            <param name="value">The newly set ScrollBar value.</param>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.ScrollEventArgs.Value">
            <summary>
            Gets the new ScrollBar value.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Allows for the processing of the assigned movement keys to the ScrollBar when active.
            </summary>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.Refresh">
            <summary>
            Redraws the control's surface.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.BindTo(System.Windows.Forms.Control)">
            <summary>
            Binds or attaches the ScrollBar to the scroll events of any
            <see cref="T:System.Windows.Forms.ScrollableControl"/> or <see cref="T:System.Windows.Forms.DataGridView"/>.
            </summary>
            <param name="control">
            The <see cref="T:System.Windows.Forms.ScrollableControl"/> or <see cref="T:System.Windows.Forms.DataGridView"/> 
            to attach to.
            </param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.BindTo(System.Windows.Forms.ScrollableControl)">
            <summary>
            Binds or attaches the ScrollBar to the scroll events of any
            <see cref="T:System.Windows.Forms.ScrollableControl"/>.
            </summary>
            <param name="scrollableControl">
            The <see cref="T:System.Windows.Forms.ScrollableControl"/> to attach to.
            </param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.BindTo(System.Windows.Forms.DataGridView,System.Boolean)">
            <summary>
            Binds or attaches the ScrollBar to the scroll events of any
            <see cref="T:System.Windows.Forms.DataGridView"/>.
            </summary>
            <param name="dataGridView">
            The <see cref="T:System.Windows.Forms.DataGridView"/> to attach to.
            </param>
            <param name="allowSelection">
            Allow cell-selections when scrolling?
            </param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.DrawScrollBar">
            <summary>
            Draws the ScrollBar.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.DrawThumb(System.Drawing.Graphics@,System.Drawing.Pen,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Draws the ScrollBar's thumb.
            </summary>
            <param name="graphics">The Graphics canvas.</param>
            <param name="thumbPen">The pen used to draw the thumb.</param>
            <param name="controlRectangle">The rectangle surface on which to draw the graphics.</param>
            <param name="thickness">The thickness of the thumb.</param>
            <param name="height">The thumb's height.</param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.DrawTopArrow(System.Drawing.Graphics@,System.Drawing.Pen,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Draws the ScrollBar's top arrow.
            </summary>
            <param name="graphics">The Graphics canvas.</param>
            <param name="arrowPen">The pen used to draw the arrow.</param>
            <param name="controlRectangle">The rectangle surface on which to draw the graphics.</param>
            <param name="thickness">The thickness of the arrow.</param>
            <param name="height">The arrow's height.</param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.DrawArrow(System.Drawing.Graphics,System.Drawing.Rectangle,Utilities.BunifuSlider.BunifuVScrollBar.ArrowType,Utilities.BunifuSlider.BunifuVScrollBar.ArrowStyle,System.Drawing.Color)">
            <summary>
            Draws the ScrollBar's arrows.
            </summary>
            <param name="g">The Graphics object.</param>
            <param name="controlRectangle">The rectangle surface on which to draw the graphics.</param>
            <param name="type">The type of arrow to be drawn.</param>
            <param name="style">The style of arrow to be rendered.</param>
            <param name="arrowColor">The arrow color to apply.</param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.DrawArrow(System.Drawing.Graphics@,System.Drawing.Pen,Utilities.BunifuSlider.BunifuVScrollBar.ArrowType,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws the ScrollBar's arrows.
            </summary>
            <param name = "graphics" > The Graphics canvas.</param>
            <param name = "arrowPen" > The pen used to draw the graphics surface.</param>
            <param name = "type" > The type of arrow to be drawn - either top or bottom.</param>
            <param name = "controlRectangle" > The rectangle surface on which to draw the graphics.</param>
            <param name = "thickness" > The thickness of the arrow.</param>
            <param name = "width" > The arrow's width.</param>
            <param name = "height" > The arrow's height.</param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.DrawRoundedRectangle(System.Drawing.RectangleF,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Draws a rectangle in the indicated Rectangle rounding the indicated corners.
            </summary>
            <param name="rect"></param>
            <param name="xradius"></param>
            <param name="yradius"></param>
            <param name="round_ul"></param>
            <param name="round_ur"></param>
            <param name="round_lr"></param>
            <param name="round_ll"></param>
            <returns></returns>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.DrawLayout(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Creates the control's container layout.
            </summary>
            <param name="graphics">The Graphics canvas.</param>
            <param name="Bounds">The canvas rectangle-bounds.</param>
            <param name="radius">The canvas corner-radius.</param>
            <param name="pen">The pen used to draw objects inside the canvas.</param>
            <param name="backColor">The layout's background color.</param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.HandleMouseCapture(System.Boolean)">
            <summary>
            Handles mouse-capture events in the ScrollBar.
            </summary>
            <param name="isInTimerMode">Prevents attaching multiple events when moving the thumb through the Timer when set to "true".</param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.BindToContainerControl">
            <summary>
            Automatically binds the attached container-control
            or DataGridView at runtime.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.IsControlScrollBindable(System.Windows.Forms.Control)">
            <summary>
            Determines if a certain control can 
            be bound-up with Bunifu Scrollbars.
            </summary>
            <param name="control">The control to determine.</param>
            <returns>True if scroll-bindable, or False if not scroll-bindable.</returns>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.IsInDesignMode">
            <summary>
            Determines whether the hosting process is in design-mode.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.DebugString(System.String)">
            <summary>
            Allows you to view the value of a parameter or object value from the parent form's "Text" caption.
            </summary>
            <param name="value">The value (in <see cref="T:System.String"/> format) to be printed.</param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.BeginThumbMovement(System.Int32)">
            <summary>
            Begins moving the thumb using the Timer from the "MouseDown" event.
            </summary>
            <param name="movementIntervals">The timer intervals to skip before the thumb moves again.</param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.EndThumbMovement">
            <summary>
            Resets the duration set and then ends the thumb's movement in the 
            Timer from the "MouseUp" event.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.AutoGrowScrollBar">
            <summary>
            Adjusts the ScrollBar's size when inactive. 
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.AutoShrinkScrollBar">
            <summary>
            Adjusts the ScrollBar's size when active. 
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.Shrink(System.Object)">
            <summary>
            [Asynchronous] Called by the method <see cref="M:Utilities.BunifuSlider.BunifuVScrollBar.AutoShrinkScrollBar"/> to shrink the ScrollBar.
            </summary>
            <param name="stateInfo">May be used to represent the state of the ScrollBar.</param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.MoveThumb(System.Int32,System.Boolean)">
            <summary>
            Moves the thumb to a specified position.
            </summary>
            <param name="to">The new thumb's position.</param>
            <param name="allowTransition">Enable/disable the thumb's transition.
            Disabling the animation is important when handling on-demand thumb-change scenarios.
            </param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.MoveValue(System.Int32)">
            <summary>
            Moves any value to a newly specified position.
            </summary>
            <param name="to">The new value.</param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.PerformMouseEffect(Utilities.BunifuSlider.BunifuVScrollBar.EffectType)">
            <summary>
            Performs a directed mouse effect to the control.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.SetThumbLength">
            <summary>
            Sets the appropriate length of the thumb.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.SetScrollBounds">
            <summary>
            Applies the standard scroll values responsible for setting the bounds of the ScrollBar.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.IsPointInRect(System.Drawing.Point,System.Drawing.Rectangle)">
            <summary>
            Determines whether rectangle contains given point.
            </summary>
            <param name="pt">The point to test.</param>
            <param name="rect">The base rectangle.</param>
            <returns>
            	<c>true</c> if rectangle contains given point; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.IsMouseInThumb(System.Boolean)">
            <summary>
            Determines whether the mouse in within the thumb's region.
            </summary>
            <param name="applyUniqueCheck">Applies a unique check whereby anywhere within the thumb's region is used instead of the thumb's rectangle region.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.IsMouseInScrollBar">
            <summary>
            Determines whether the mouse in within the thumb's region.
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.ConvertRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts the ScrollBar's size dimensions to the user-specified range dimensions.
            </summary>
            <param name="originalStart">The original starting point.</param>
            <param name="originalEnd">The original ending point.</param>
            <param name="newStart">The new starting point in the user-specified range.</param>
            <param name="newEnd">The new ending point in the user-specified range.</param>
            <param name="value">The value to be set within the range.</param>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuVScrollBar.BunifuVScrollBarActionList">
            <summary>
            Initializes a new instance of the <see cref="T:Utilities.BunifuSlider.BunifuVScrollBar.BunifuVScrollBarActionList"/> class.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.BunifuVScrollBarActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="T:Utilities.BunifuSlider.BunifuVScrollBar.ScrollBarState">
            <summary>
            An abstract class used to define various states within Bunifu ScrollBars.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.ScrollBarState.#ctor(System.String)">
            <summary>
            Creates a new Bunifu ScrollBar state.
            </summary>
            <param name="name">Provide a name for the state. This can be used to track the state once initialized.</param>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.ScrollBarState.Name">
            <summary>
            Gets the name applied to the state.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.ScrollBarState.ScrollBarColor">
            <summary>
             Gets or sets the background color of the ScrollBar.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.ScrollBarState.ScrollBarBorderColor">
            <summary>
             Gets or sets the border color of the ScrollBar.
            </summary>
        </member>
        <member name="P:Utilities.BunifuSlider.BunifuVScrollBar.ScrollBarState.ThumbColor">
            <summary>
             Gets or sets the background color of the thumb.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.ScrollBarState.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing the values passed to the state separated by semi-colons.
            The order of appearance is: <see cref="P:Utilities.BunifuSlider.BunifuVScrollBar.ScrollBarState.ScrollBarBorderColor"/>, <see cref="P:Utilities.BunifuSlider.BunifuVScrollBar.ScrollBarState.ScrollBarColor"/>, 
            <see cref="P:Utilities.BunifuSlider.BunifuVScrollBar.ScrollBarState.ThumbColor"/>.
            </summary>
            <returns>String</returns>
        </member>
        <member name="F:Utilities.BunifuSlider.BunifuVScrollBar.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Utilities.BunifuSlider.BunifuVScrollBar.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Utilities.BunifuScrollBar.Transitions.IManagedType">
            <summary>
            Interface for all types we can perform transitions on. 
            Each type (e.g. int, double, Color) that we can perform a transition on 
            needs to have its own class that implements this interface. These classes 
            tell the transition system how to act on objects of that type.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.IManagedType.getManagedType">
            <summary>
            Returns the Type that the instance is managing.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.IManagedType.copy(System.Object)">
            <summary>
            Returns a deep copy of the object passed in. (In particular this is 
            needed for types that are objects.)
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.IManagedType.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an object holding the value between the start and end corresponding
            to the percentage passed in. (Note: the percentage can be less than 0% or
            greater than 100%.)
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.ITransitionType.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called by the Transition framework when its timer ticks to pass in the
            time (in ms) since the transition started. 
            
            You should return (in an out parameter) the percentage movement towards 
            the destination value for the time passed in. Note: this does not need to
            be a smooth transition from 0% to 100%. You can overshoot with values
            greater than 100% or undershoot if you need to (for example, to have some
            form of "elasticity").
            
            The percentage should be returned as (for example) 0.1 for 10%.
            
            You should return (in an out parameter) whether the transition has completed.
            (This may not be at the same time as the percentage has moved to 100%.)
            </summary>
        </member>
        <member name="T:Utilities.BunifuScrollBar.Transitions.ManagedType_Color">
            <summary>
            Class that manages transitions for Color properties. For these we
            need to transition the R, G, B and A sub-properties independently.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.ManagedType_Color.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.ManagedType_Color.copy(System.Object)">
            <summary>
            Returns a copy of the color object passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.ManagedType_Color.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Creates an intermediate value for the colors depending on the percentage passed in.
            </summary>
        </member>
        <member name="T:Utilities.BunifuScrollBar.Transitions.ManagedType_Double">
            <summary>
            Manages transitions for double properties.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.ManagedType_Double.getManagedType">
            <summary>
             Returns the type managed by this class.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.ManagedType_Double.copy(System.Object)">
            <summary>
            Returns a copy of the double passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.ManagedType_Double.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between start and end for the percentage passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.ManagedType_Float.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.ManagedType_Float.copy(System.Object)">
            <summary>
            Returns a copy of the float passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.ManagedType_Float.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the interpolated value for the percentage passed in.
            </summary>
        </member>
        <member name="T:Utilities.BunifuScrollBar.Transitions.ManagedType_Int">
            <summary>
            Manages transitions for int properties.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.ManagedType_Int.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.ManagedType_Int.copy(System.Object)">
            <summary>
            Returns a copy of the int passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.ManagedType_Int.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between the start and end for the percentage passed in.
            </summary>
        </member>
        <member name="T:Utilities.BunifuScrollBar.Transitions.ManagedType_String">
            <summary>
            Manages transitions for strings. This doesn't make as much sense as transitions
            on other types, but I like the way it looks!
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.ManagedType_String.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.ManagedType_String.copy(System.Object)">
            <summary>
            Returns a copy of the string passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.ManagedType_String.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an "interpolated" string.
            </summary>
        </member>
        <member name="T:Utilities.BunifuScrollBar.Transitions.Transition">
            <summary>
            Lets you perform animated transitions of properties on arbitrary objects. These 
            will often be transitions of UI properties, for example an animated fade-in of 
            a UI object, or an animated move of a UI object from one position to another.
            
            Each transition can simulataneously change multiple properties, including properties
            across multiple objects.
            
            Example transition
            ------------------
            a.      Transition t = new Transition(new TransitionMethod_Linear(500));
            b.      t.add(form1, "Width", 500);
            c.      t.add(form1, "BackColor", Color.Red);
            d.      t.run();
              
            Line a:         Creates a new transition. You specify the transition method.
                            
            Lines b. and c: Set the destination values of the properties you are animating.
            
            Line d:         Starts the transition.
            
            Transition methods
            ------------------
            TransitionMethod objects specify how the transition is made. Examples include
            linear transition, ease-in-ease-out and so on. Different transition methods may
            need different parameters.
            
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.Transition.#cctor">
            <summary>
            You should register all managed-types here.
            </summary>
        </member>
        <member name="T:Utilities.BunifuScrollBar.Transitions.Transition.Args">
            <summary>
            Args passed with the TransitionCompletedEvent.
            </summary>
        </member>
        <member name="E:Utilities.BunifuScrollBar.Transitions.Transition.TransitionCompletedEvent">
            <summary>
            Event raised when the transition hass completed.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.Transition.run(System.Object,System.String,System.Object,Utilities.BunifuScrollBar.Transitions.ITransitionType)">
            <summary>
            Creates and immediately runs a transition on the property passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.Transition.run(System.Object,System.String,System.Object,System.Object,Utilities.BunifuScrollBar.Transitions.ITransitionType)">
            <summary>
            Sets the property passed in to the initial value passed in, then creates and 
            immediately runs a transition on it.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.Transition.runChain(Utilities.BunifuScrollBar.Transitions.Transition[])">
            <summary>
            Creates a TransitionChain and runs it.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.Transition.#ctor(Utilities.BunifuScrollBar.Transitions.ITransitionType)">
            <summary>
            Constructor. You pass in the object that holds the properties 
            that you are performing transitions on.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.Transition.add(System.Object,System.String,System.Object)">
            <summary>
            Adds a property that should be animated as part of this transition.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.Transition.run">
            <summary>
            Starts the transition.
            </summary>
        </member>
        <member name="P:Utilities.BunifuScrollBar.Transitions.Transition.TransitionedProperties">
            <summary>
            Property that returns a list of information about each property managed
            by this transition.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.Transition.removeProperty(Utilities.BunifuScrollBar.Transitions.Transition.TransitionedPropertyInfo)">
            <summary>
            We remove the property with the info passed in from the transition.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.Transition.onTimer">
            <summary>
            Called when the transition timer ticks.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.Transition.setProperty(System.Object,Utilities.BunifuScrollBar.Transitions.Transition.PropertyUpdateArgs)">
            <summary>
            Sets a property on the object passed in to the value passed in. This method
            invokes itself on the GUI thread if the property is being invoked on a GUI 
            object.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.Transition.isDisposed(System.Object)">
            <summary>
            Returns true if the object passed in is a Control and is disposed
            or in the process of disposing. (If this is the case, we don't want
            to make any changes to its properties.)
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.Transition.registerType(Utilities.BunifuScrollBar.Transitions.IManagedType)">
            <summary>
            Registers a transition-type. We hold them in a map.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionChain.runNextTransition">
            <summary>
            Runs the next transition in the list.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionChain.onTransitionCompleted(System.Object,Utilities.BunifuScrollBar.Transitions.Transition.Args)">
            <summary>
            Called when the transition we have just run has completed.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionElement.#ctor(System.Double,System.Double,Utilities.BunifuScrollBar.Transitions.InterpolationMethod)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Utilities.BunifuScrollBar.Transitions.TransitionElement.EndTime">
            <summary>
            The percentage of elapsed time, expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:Utilities.BunifuScrollBar.Transitions.TransitionElement.EndValue">
            <summary>
            The value of the animated properties at the EndTime. This is the percentage 
            movement of the properties between their start and end values. This should
            be expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:Utilities.BunifuScrollBar.Transitions.TransitionElement.InterpolationMethod">
            <summary>
            The interpolation method to use when moving between the previous value
            and the current one.
            </summary>
        </member>
        <member name="T:Utilities.BunifuScrollBar.Transitions.TransitionManager">
            <summary>
            This class is responsible for running transitions. It holds the timer that
            triggers transaction animation. 
            </summary><remarks>
            This class is a singleton.
            
            We manage the transaction timer here so that we can have a single timer
            across all transactions. If each transaction has its own timer, this creates
            one thread for each transaction, and this can lead to too many threads in
            an application.
            
            This class essentially just manages the timer for the transitions. It calls 
            back into the running transitions, which do the actual work of the transition.
            
            </remarks>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionManager.getInstance">
            <summary>
            Singleton's getInstance method.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionManager.register(Utilities.BunifuScrollBar.Transitions.Transition)">
            <summary>
            You register a transition with the manager here. This will start to run
            the transition as the manager's timer ticks.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionManager.removeDuplicates(Utilities.BunifuScrollBar.Transitions.Transition)">
            <summary>
            Checks if any existing transitions are acting on the same properties as the
            transition passed in. If so, we remove the duplicated properties from the 
            older transitions.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionManager.removeDuplicates(Utilities.BunifuScrollBar.Transitions.Transition,Utilities.BunifuScrollBar.Transitions.Transition)">
            <summary>
            Finds any properties in the old-transition that are also in the new one,
            and removes them from the old one.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionManager.#ctor">
            <summary>
            Private constructor (for singleton).
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionManager.onTimerElapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Called when the timer ticks.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionManager.onTransitionCompleted(System.Object,Utilities.BunifuScrollBar.Transitions.Transition.Args)">
            <summary>
            Called when a transition has completed. 
            </summary>
        </member>
        <member name="T:Utilities.BunifuScrollBar.Transitions.TransitionType_Acceleration">
            <summary>
            Manages transitions under constant acceleration from a standing start.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionType_Acceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionType_Acceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 0, and the acceleration to get to 1.0
            at t=1.0 is 2, so the formula just becomes:
              s = t^2
            </summary>
        </member>
        <member name="T:Utilities.BunifuScrollBar.Transitions.TransitionType_Bounce">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is accelerated to the destination and then decelerated back
            as if being dropped with gravity and bouncing back against gravity.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionType_Bounce.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:Utilities.BunifuScrollBar.Transitions.TransitionType_CriticalDamping">
            <summary>
            This transition animates with an exponential decay. This has a damping effect
            similar to the motion of a needle on an electomagnetically controlled dial.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionType_CriticalDamping.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionType_CriticalDamping.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            </summary>
        </member>
        <member name="T:Utilities.BunifuScrollBar.Transitions.TransitionType_Deceleration">
            <summary>
            Manages a transition starting from a high speed and decelerating to zero by
            the end of the transition.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionType_Deceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionType_Deceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 2, and the acceleration to get to 1.0
            at t=1.0 is -2, so the formula becomes:
              s = t(2-t)
            </summary>
        </member>
        <member name="T:Utilities.BunifuScrollBar.Transitions.TransitionType_EaseInEaseOut">
            <summary>
            Manages an ease-in-ease-out transition. This accelerates during the first 
            half of the transition, and then decelerates during the second half.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionType_EaseInEaseOut.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionType_EaseInEaseOut.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            We accelerate as at the rate needed (a=4) to get to 0.5 at t=0.5, and
            then decelerate at the same rate to end up at 1.0 at t=1.0.
            </summary>
        </member>
        <member name="T:Utilities.BunifuScrollBar.Transitions.TransitionType_Flash">
            <summary>
            This transition type 'flashes' the properties a specified number of times, ending
            up by reverting them to their initial values. You specify the number of bounces and
            the length of each bounce. 
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionType_Flash.#ctor(System.Int32,System.Int32)">
            <summary>
            You specify the number of bounces and the time taken for each bounce.
            </summary>
        </member>
        <member name="T:Utilities.BunifuScrollBar.Transitions.TransitionType_Linear">
            <summary>
            This class manages a linear transition. The percentage complete for the transition
            increases linearly with time.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionType_Linear.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time (in milliseconds) that the
            transition will take.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionType_Linear.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            We return the percentage completed.
            </summary>
        </member>
        <member name="T:Utilities.BunifuScrollBar.Transitions.TransitionType_ThrowAndCatch">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is decelerated to the destination and then acclerated back
            as if being thrown against gravity and then descending back with gravity.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionType_ThrowAndCatch.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:Utilities.BunifuScrollBar.Transitions.TransitionType_UserDefined">
            <summary>
            This class allows you to create user-defined transition types. You specify these
            as a list of TransitionElements. Each of these defines: 
            End time , End value, Interpolation method
            
            For example, say you want to make a bouncing effect with a decay:
            
            EndTime%    EndValue%   Interpolation
            --------    ---------   -------------
            50          100         Acceleration 
            75          50          Deceleration
            85          100         Acceleration
            91          75          Deceleration
            95          100         Acceleration
            98          90          Deceleration
            100         100         Acceleration
            
            The time values are expressed as a percentage of the overall transition time. This 
            means that you can create a user-defined transition-type and then use it for transitions
            of different lengths.
            
            The values are percentages of the values between the start and end values of the properties
            being animated in the transitions. 0% is the start value and 100% is the end value.
            
            The interpolation is one of the values from the InterpolationMethod enum.
            
            So the example above accelerates to the destination (as if under gravity) by
            t=50%, then bounces back up to half the initial height by t=75%, slowing down 
            (as if against gravity) before falling down again and bouncing to decreasing 
            heights each time.
            
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionType_UserDefined.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionType_UserDefined.#ctor(System.Collections.Generic.IList{Utilities.BunifuScrollBar.Transitions.TransitionElement},System.Int32)">
            <summary>
            Constructor. You pass in the list of TransitionElements and the total time
            (in milliseconds) for the transition.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionType_UserDefined.setup(System.Collections.Generic.IList{Utilities.BunifuScrollBar.Transitions.TransitionElement},System.Int32)">
            <summary>
            Sets up the transitions. 
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionType_UserDefined.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called to find the value for the movement of properties for the time passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.TransitionType_UserDefined.getElementInfo(System.Double,System.Double@,System.Double@,System.Double@,System.Double@,Utilities.BunifuScrollBar.Transitions.InterpolationMethod@)">
            <summary>
            Returns the element info for the time-fraction passed in. 
            </summary>
        </member>
        <member name="T:Utilities.BunifuScrollBar.Transitions.Utility">
            <summary>
            A class holding static utility functions.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.Utility.getValue(System.Object,System.String)">
            <summary>
            Returns the value of the property passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.Utility.setValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the property passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.Utility.interpolate(System.Double,System.Double,System.Double)">
            <summary>
            Returns a value between d1 and d2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.Utility.interpolate(System.Int32,System.Int32,System.Double)">
            <summary>
            Returns a value betweeen i1 and i2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.Utility.interpolate(System.Single,System.Single,System.Double)">
            <summary>
            Returns a value betweeen f1 and f2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.Utility.convertLinearToEaseInEaseOut(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under an ease-in-ease-out transition.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.Utility.convertLinearToAcceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant acceleration transition.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.Utility.convertLinearToDeceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant deceleration transition.
            </summary>
        </member>
        <member name="M:Utilities.BunifuScrollBar.Transitions.Utility.raiseEvent``1(System.EventHandler{``0},System.Object,``0)">
            <summary>
            Fires the event passed in in a thread-safe way. 
            </summary><remarks>
            This method loops through the targets of the event and invokes each in turn. If the
            target supports ISychronizeInvoke (such as forms or controls) and is set to run 
            on a different thread, then we call BeginInvoke to marshal the event to the target
            thread. If the target does not support this interface (such as most non-form classes)
            or we are on the same thread as the target, then the event is fired on the same
            thread as this is called from.
            </remarks>
        </member>
    </members>
</doc>
